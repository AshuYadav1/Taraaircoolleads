{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a high-conversion, SEO-optimized, mobile-first landing page for Tara Air Conditioning Sales & Service, a local AC repair and installation business serving Mumbai's Western Suburbs. The application is designed as a comprehensive lead generation funnel with advanced conversion optimization, local SEO targeting, and multi-channel lead capture.\n\nThe system features professional design elements, urgency-driven marketing, transparent pricing displays, and sophisticated analytics tracking. Built as a modern full-stack web application with React frontend, Express.js backend, and PostgreSQL database using Drizzle ORM, optimized for Google Ads, Facebook Ads, and organic search traffic.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\nFocus on lead generation and conversion optimization.\nEmphasis on professional appearance, SEO keywords, and funnel creation.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React with TypeScript using Vite as the build tool\n- **UI Library**: Shadcn/UI components built on Radix UI primitives\n- **Styling**: Tailwind CSS with custom design tokens for brand colors (trust-blue, accent-orange)\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack React Query for server state management\n- **Forms**: React Hook Form with Zod validation for type-safe form handling\n\n## Backend Architecture  \n- **Framework**: Express.js with TypeScript running on Node.js\n- **API Design**: RESTful API with dedicated endpoints for leads (`/api/leads`) and analytics (`/api/analytics`)\n- **Validation**: Zod schemas for request/response validation shared between client and server\n- **Storage Interface**: Abstracted storage layer with in-memory implementation (MemStorage) that can be swapped for database persistence\n- **Development Setup**: Vite middleware integration for hot module replacement in development\n\n## Database Schema\n- **ORM**: Drizzle ORM with PostgreSQL dialect\n- **Tables**:\n  - `leads`: Stores customer inquiries with contact info, service type, location, and source tracking\n  - `analytics`: Tracks user interactions and conversion events with IP and user agent data\n- **Schema Location**: Shared between client and server in `/shared/schema.ts` for type safety\n\n## Analytics & Tracking\n- **Multi-platform Tracking**: Google Analytics 4, Meta Pixel, and Google Tag Manager integration\n- **Custom Analytics**: Backend API endpoint for internal event tracking\n- **Conversion Tracking**: Dedicated hooks for tracking phone calls, WhatsApp clicks, and form submissions\n- **User Journey Analysis**: Page views, interaction events, and conversion funnels\n\n## Development & Build Process\n- **Monorepo Structure**: Client, server, and shared code in organized directories\n- **TypeScript Configuration**: Strict typing with path mapping for clean imports\n- **Build Pipeline**: Vite for frontend builds, esbuild for backend bundling\n- **Development Server**: Hot reload for both frontend and backend code\n\n## SEO & Marketing Optimization\n- **Local SEO**: Schema.org structured data for local business markup\n- **Meta Tags**: Optimized title, description, and Open Graph tags\n- **Performance**: Font optimization, image loading strategies, and bundle optimization\n- **Mobile-First**: Responsive design with sticky mobile footer for conversions\n\n# External Dependencies\n\n## Database & Storage\n- **Neon Database**: PostgreSQL-compatible serverless database (@neondatabase/serverless)\n- **Drizzle ORM**: Type-safe database ORM with migration support\n\n## Frontend Libraries\n- **Radix UI**: Comprehensive set of accessible UI components for modals, forms, navigation\n- **TanStack React Query**: Server state management and caching\n- **React Hook Form**: Form handling with validation\n- **Wouter**: Lightweight routing solution\n- **Tailwind CSS**: Utility-first CSS framework\n\n## Backend Services  \n- **Express.js**: Web application framework\n- **Connect-PG-Simple**: PostgreSQL session store for Express sessions\n\n## Development Tools\n- **Vite**: Build tool and development server\n- **TypeScript**: Type safety across the entire stack\n- **ESBuild**: Fast JavaScript bundler for production builds\n- **Replit Integration**: Custom plugins for Replit development environment\n\n## Third-Party Integrations\n- **Google Fonts**: Inter font family for consistent typography\n- **Unsplash**: Stock photography for hero images and customer testimonials\n- **Analytics Platforms**: Google Analytics, Meta Pixel, Google Tag Manager for conversion tracking\n- **Communication**: WhatsApp Business API integration for customer messaging\n\nThe application architecture prioritizes lead conversion optimization, local search visibility, and seamless user experience across desktop and mobile devices while maintaining type safety and developer productivity.","size_bytes":4861},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        \"trust-blue\": {\n          DEFAULT: \"hsl(217 91% 35%)\",\n          light: \"hsl(217 91% 60%)\",\n        },\n        \"accent-orange\": {\n          DEFAULT: \"hsl(24 95% 53%)\",\n          light: \"hsl(24 95% 64%)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"Inter\", \"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        pulse: {\n          \"0%, 100%\": {\n            opacity: \"1\",\n          },\n          \"50%\": {\n            opacity: \"0.8\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        pulse: \"pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3203},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express, Request, Response } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertLeadSchema, insertAnalyticsSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Lead creation endpoint\n  app.post(\"/api/leads\", async (req: Request, res: Response) => {\n    try {\n      const leadData = insertLeadSchema.parse(req.body);\n      const lead = await storage.createLead(leadData);\n      \n      // Log the lead for monitoring\n      console.log(`New lead created: ${lead.name} - ${lead.phone} - ${lead.service}`);\n      \n      res.json(lead);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ \n          message: \"Validation error\", \n          errors: error.errors \n        });\n      }\n      console.error(\"Error creating lead:\", error);\n      res.status(500).json({ message: \"Failed to create lead\" });\n    }\n  });\n\n  // Get all leads\n  app.get(\"/api/leads\", async (req: Request, res: Response) => {\n    try {\n      const leads = await storage.getLeads();\n      res.json(leads);\n    } catch (error) {\n      console.error(\"Error fetching leads:\", error);\n      res.status(500).json({ message: \"Failed to fetch leads\" });\n    }\n  });\n\n  // Analytics tracking endpoint\n  app.post(\"/api/analytics\", async (req: Request, res: Response) => {\n    try {\n      const analyticsData = insertAnalyticsSchema.parse({\n        ...req.body,\n        userAgent: req.get('User-Agent'),\n        ip: req.ip || req.connection.remoteAddress\n      });\n      \n      const analytics = await storage.trackEvent(analyticsData);\n      res.json(analytics);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ \n          message: \"Validation error\", \n          errors: error.errors \n        });\n      }\n      console.error(\"Error tracking analytics:\", error);\n      res.status(500).json({ message: \"Failed to track event\" });\n    }\n  });\n\n  // WhatsApp webhook endpoint (for future integration)\n  app.post(\"/api/whatsapp\", async (req: Request, res: Response) => {\n    try {\n      // TODO: Implement WhatsApp Business API webhook handler\n      console.log(\"WhatsApp webhook received:\", req.body);\n      res.json({ status: \"received\" });\n    } catch (error) {\n      console.error(\"Error handling WhatsApp webhook:\", error);\n      res.status(500).json({ message: \"Failed to process WhatsApp webhook\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":2596},"server/storage.ts":{"content":"import { type Lead, type InsertLead, type Analytics, type InsertAnalytics } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  createLead(lead: InsertLead): Promise<Lead>;\n  getLeads(): Promise<Lead[]>;\n  getLeadById(id: string): Promise<Lead | undefined>;\n  trackEvent(analytics: InsertAnalytics): Promise<Analytics>;\n  getAnalytics(): Promise<Analytics[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private leads: Map<string, Lead>;\n  private analytics: Map<string, Analytics>;\n\n  constructor() {\n    this.leads = new Map();\n    this.analytics = new Map();\n  }\n\n  async createLead(insertLead: InsertLead): Promise<Lead> {\n    const id = randomUUID();\n    const lead: Lead = { \n      ...insertLead,\n      source: insertLead.source || null,\n      location: insertLead.location || null,\n      message: insertLead.message || null,\n      id,\n      createdAt: new Date()\n    };\n    this.leads.set(id, lead);\n    return lead;\n  }\n\n  async getLeads(): Promise<Lead[]> {\n    return Array.from(this.leads.values()).sort(\n      (a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0)\n    );\n  }\n\n  async getLeadById(id: string): Promise<Lead | undefined> {\n    return this.leads.get(id);\n  }\n\n  async trackEvent(insertAnalytics: InsertAnalytics): Promise<Analytics> {\n    const id = randomUUID();\n    const analytics: Analytics = {\n      ...insertAnalytics,\n      page: insertAnalytics.page || null,\n      userAgent: insertAnalytics.userAgent || null,\n      ip: insertAnalytics.ip || null,\n      id,\n      createdAt: new Date()\n    };\n    this.analytics.set(id, analytics);\n    return analytics;\n  }\n\n  async getAnalytics(): Promise<Analytics[]> {\n    return Array.from(this.analytics.values()).sort(\n      (a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0)\n    );\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1890},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const leads = pgTable(\"leads\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  phone: text(\"phone\").notNull(),\n  service: text(\"service\").notNull(),\n  location: text(\"location\"),\n  message: text(\"message\"),\n  source: text(\"source\"), // form, whatsapp, call\n  createdAt: timestamp(\"created_at\").defaultNow()\n});\n\nexport const insertLeadSchema = createInsertSchema(leads).pick({\n  name: true,\n  phone: true,\n  service: true,\n  location: true,\n  message: true,\n  source: true,\n});\n\nexport type InsertLead = z.infer<typeof insertLeadSchema>;\nexport type Lead = typeof leads.$inferSelect;\n\nexport const analytics = pgTable(\"analytics\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  event: text(\"event\").notNull(),\n  page: text(\"page\"),\n  userAgent: text(\"user_agent\"),\n  ip: text(\"ip\"),\n  createdAt: timestamp(\"created_at\").defaultNow()\n});\n\nexport const insertAnalyticsSchema = createInsertSchema(analytics).pick({\n  event: true,\n  page: true,\n  userAgent: true,\n  ip: true,\n});\n\nexport type InsertAnalytics = z.infer<typeof insertAnalyticsSchema>;\nexport type Analytics = typeof analytics.$inferSelect;\n","size_bytes":1369},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":699},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(222.2 84% 4.9%);\n  --card: hsl(0 0% 100%);\n  --card-foreground: hsl(222.2 84% 4.9%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(222.2 84% 4.9%);\n  --primary: hsl(217 91% 60%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(210 40% 98%);\n  --secondary-foreground: hsl(222.2 84% 4.9%);\n  --muted: hsl(210 40% 98%);\n  --muted-foreground: hsl(215.4 16.3% 46.9%);\n  --accent: hsl(210 40% 98%);\n  --accent-foreground: hsl(222.2 84% 4.9%);\n  --destructive: hsl(0 84.2% 60.2%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(214.3 31.8% 91.4%);\n  --input: hsl(214.3 31.8% 91.4%);\n  --ring: hsl(217 91% 60%);\n  --chart-1: hsl(217 91% 60%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(0 0% 100%);\n  --sidebar-foreground: hsl(222.2 84% 4.9%);\n  --sidebar-primary: hsl(217 91% 60%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(210 40% 98%);\n  --sidebar-accent-foreground: hsl(222.2 84% 4.9%);\n  --sidebar-border: hsl(214.3 31.8% 91.4%);\n  --sidebar-ring: hsl(217 91% 60%);\n  --font-sans: 'Inter', system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.5rem;\n  --trust-blue: hsl(217 91% 35%);\n  --trust-blue-light: hsl(217 91% 60%);\n  --accent-orange: hsl(24 95% 53%);\n  --accent-orange-light: hsl(24 95% 64%);\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 2px 4px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 4px 6px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 8px 10px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: hsl(222.2 84% 4.9%);\n  --foreground: hsl(210 40% 98%);\n  --card: hsl(222.2 84% 4.9%);\n  --card-foreground: hsl(210 40% 98%);\n  --popover: hsl(222.2 84% 4.9%);\n  --popover-foreground: hsl(210 40% 98%);\n  --primary: hsl(217 91% 60%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(217.2 32.6% 17.5%);\n  --secondary-foreground: hsl(210 40% 98%);\n  --muted: hsl(217.2 32.6% 17.5%);\n  --muted-foreground: hsl(215 20.2% 65.1%);\n  --accent: hsl(217.2 32.6% 17.5%);\n  --accent-foreground: hsl(210 40% 98%);\n  --destructive: hsl(0 62.8% 30.6%);\n  --destructive-foreground: hsl(210 40% 98%);\n  --border: hsl(217.2 32.6% 17.5%);\n  --input: hsl(217.2 32.6% 17.5%);\n  --ring: hsl(217 91% 60%);\n  --chart-1: hsl(217 91% 60%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(222.2 84% 4.9%);\n  --sidebar-foreground: hsl(210 40% 98%);\n  --sidebar-primary: hsl(217 91% 60%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(217.2 32.6% 17.5%);\n  --sidebar-accent-foreground: hsl(210 40% 98%);\n  --sidebar-border: hsl(217.2 32.6% 17.5%);\n  --sidebar-ring: hsl(217 91% 60%);\n  --trust-blue: hsl(217 91% 60%);\n  --trust-blue-light: hsl(217 91% 70%);\n  --accent-orange: hsl(24 95% 53%);\n  --accent-orange-light: hsl(24 95% 64%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    font-family: 'Inter', system-ui, sans-serif;\n  }\n}\n\n@layer utilities {\n  .trust-blue {\n    color: hsl(217 91% 35%);\n  }\n  \n  .trust-blue-light {\n    color: hsl(217 91% 60%);\n  }\n  \n  .accent-orange {\n    color: hsl(24 95% 53%);\n  }\n  \n  .accent-orange-light {\n    color: hsl(24 95% 64%);\n  }\n\n  .bg-trust-blue {\n    background-color: hsl(217 91% 35%);\n  }\n  \n  .bg-trust-blue-light {\n    background-color: hsl(217 91% 60%);\n  }\n  \n  .bg-accent-orange {\n    background-color: hsl(24 95% 53%);\n  }\n  \n  .bg-accent-orange-light {\n    background-color: hsl(24 95% 64%);\n  }\n\n  .hover\\:bg-trust-blue-light:hover {\n    background-color: hsl(217 91% 60%);\n  }\n  \n  .hover\\:bg-accent-orange-light:hover {\n    background-color: hsl(24 95% 64%);\n  }\n\n  .border-trust-blue {\n    border-color: hsl(217 91% 35%);\n  }\n\n  .text-trust-blue {\n    color: hsl(217 91% 35%);\n  }\n\n  .hover\\:text-trust-blue-light:hover {\n    color: hsl(217 91% 60%);\n  }\n\n  /* Custom animations */\n  .animate-fadeIn {\n    animation: fadeIn 0.3s ease-in;\n  }\n\n  .animate-slide-in {\n    animation: slideIn 0.5s ease-out;\n  }\n\n  .animate-slide-in-right {\n    animation: slideInRight 0.5s ease-out;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @keyframes slideIn {\n    from {\n      transform: translateY(-20px);\n      opacity: 0;\n    }\n    to {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n\n  @keyframes slideInRight {\n    from {\n      transform: translateX(100%);\n      opacity: 0;\n    }\n    to {\n      transform: translateX(0);\n      opacity: 1;\n    }\n  }\n}\n","size_bytes":5726},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ac-service-gallery.tsx":{"content":"import { useState } from \"react\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\n\nexport default function ACServiceGallery() {\n  const { trackEvent } = useAnalytics();\n  const [selectedCategory, setSelectedCategory] = useState(\"repair\");\n\n  const serviceImages = {\n    repair: [\n      {\n        src: \"https://images.unsplash.com/photo-1581094794329-c8112a89af12?ixlib=rb-4.0.3&w=800&h=600\",\n        title: \"Split AC Repair - Gas Filling\",\n        description: \"Professional gas filling with pressure testing for split AC unit in Dahisar home\",\n        location: \"Dahisar West\"\n      },\n      {\n        src: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?ixlib=rb-4.0.3&w=800&h=600\", \n        title: \"Compressor Replacement\",\n        description: \"Replacing faulty compressor for window AC unit with warranty\",\n        location: \"Borivali East\"\n      },\n      {\n        src: \"https://images.unsplash.com/photo-1504253163759-c23fccaebb55?ixlib=rb-4.0.3&w=800&h=600\",\n        title: \"PCB Circuit Board Repair\",\n        description: \"Repairing control board for LG inverter AC with genuine parts\",\n        location: \"Mira Road\"\n      },\n      {\n        src: \"https://images.unsplash.com/photo-1620626011761-996317b8d101?ixlib=rb-4.0.3&w=800&h=600\",\n        title: \"Filter Cleaning Service\",\n        description: \"Deep cleaning of AC filters and indoor unit coil cleaning\",\n        location: \"Kandivali West\"\n      }\n    ],\n    installation: [\n      {\n        src: \"https://images.unsplash.com/photo-1581092580497-e0d23cbdf1dc?ixlib=rb-4.0.3&w=800&h=600\",\n        title: \"Split AC Installation\",\n        description: \"Professional wall mounting and copper piping for new 1.5 ton split AC\",\n        location: \"Dahisar East\"\n      },\n      {\n        src: \"https://images.unsplash.com/photo-1563822249547-71ed1a2a4937?ixlib=rb-4.0.3&w=800&h=600\",\n        title: \"Outdoor Unit Mounting\",\n        description: \"Secure outdoor unit installation with proper bracket mounting\",\n        location: \"Borivali West\"\n      },\n      {\n        src: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?ixlib=rb-4.0.3&w=800&h=600\",\n        title: \"Copper Piping Work\",\n        description: \"Professional copper pipe installation with insulation and drainage\",\n        location: \"Malad West\"\n      },\n      {\n        src: \"https://images.unsplash.com/photo-1504253163759-c23fccaebb55?ixlib=rb-4.0.3&w=800&h=600\",\n        title: \"Electrical Connections\",\n        description: \"Safe electrical wiring and MCB installation for AC unit\",\n        location: \"Kandivali East\"\n      }\n    ],\n    maintenance: [\n      {\n        src: \"https://images.unsplash.com/photo-1581094794329-c8112a89af12?ixlib=rb-4.0.3&w=800&h=600\",\n        title: \"Annual AMC Service\",\n        description: \"Complete AC maintenance including cleaning, gas check, and performance test\",\n        location: \"Dahisar West\"\n      },\n      {\n        src: \"https://images.unsplash.com/photo-1620626011761-996317b8d101?ixlib=rb-4.0.3&w=800&h=600\",\n        title: \"Chemical Wash Service\",\n        description: \"Deep chemical cleaning of evaporator and condenser coils\",\n        location: \"Mira Road East\"\n      },\n      {\n        src: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?ixlib=rb-4.0.3&w=800&h=600\",\n        title: \"Pre-Summer Checkup\",\n        description: \"Complete AC inspection and tune-up before summer season\",\n        location: \"Borivali East\"\n      },\n      {\n        src: \"https://images.unsplash.com/photo-1563822249547-71ed1a2a4937?ixlib=rb-4.0.3&w=800&h=600\",\n        title: \"Filter Replacement\",\n        description: \"High-quality filter replacement for better air quality\",\n        location: \"Malad East\"\n      }\n    ]\n  };\n\n  const categories = [\n    { id: \"repair\", name: \"AC Repair\", icon: \"🔧\" },\n    { id: \"installation\", name: \"Installation\", icon: \"⚡\" },\n    { id: \"maintenance\", name: \"Maintenance\", icon: \"🛠️\" }\n  ];\n\n  const handleCategoryChange = (category: string) => {\n    setSelectedCategory(category);\n    trackEvent(\"gallery_category_change\", `/gallery-${category}`);\n  };\n\n  const handleImageClick = (imageTitle: string) => {\n    trackEvent(\"gallery_image_click\", `/image-${imageTitle}`);\n  };\n\n  return (\n    <section className=\"py-16 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n            Real AC Service Work Gallery\n          </h2>\n          <p className=\"text-lg text-gray-600\">\n            Actual photos from our AC repair, installation, and maintenance jobs across Mumbai\n          </p>\n        </div>\n\n        {/* Category Tabs */}\n        <div className=\"flex justify-center mb-8\">\n          <div className=\"inline-flex bg-gray-100 rounded-lg p-1\">\n            {categories.map((category) => (\n              <button\n                key={category.id}\n                onClick={() => handleCategoryChange(category.id)}\n                className={`px-6 py-3 rounded-md font-medium transition-all ${\n                  selectedCategory === category.id\n                    ? \"bg-trust-blue text-white shadow-md\"\n                    : \"text-gray-600 hover:text-trust-blue\"\n                }`}\n                data-testid={`gallery-tab-${category.id}`}\n              >\n                <span className=\"mr-2\">{category.icon}</span>\n                {category.name}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Image Grid */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-2 gap-8 mb-12\">\n          {serviceImages[selectedCategory].map((image, index) => (\n            <div\n              key={index}\n              className=\"group cursor-pointer rounded-xl overflow-hidden shadow-lg hover:shadow-xl transition-all transform hover:scale-105\"\n              onClick={() => handleImageClick(image.title)}\n              data-testid={`gallery-image-${selectedCategory}-${index}`}\n            >\n              <div className=\"relative overflow-hidden\">\n                <img\n                  src={image.src}\n                  alt={`${image.title} - AC service in ${image.location}`}\n                  className=\"w-full h-64 object-cover group-hover:scale-110 transition-transform duration-300\"\n                  loading=\"lazy\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                  <div className=\"absolute bottom-4 left-4 text-white\">\n                    <div className=\"bg-trust-blue px-2 py-1 rounded-full text-xs mb-2\">\n                      📍 {image.location}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"p-6 bg-white\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  {image.title}\n                </h3>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">\n                  {image.description}\n                </p>\n                <div className=\"mt-4 flex items-center justify-between\">\n                  <span className=\"text-trust-blue text-sm font-medium\">\n                    📍 {image.location}\n                  </span>\n                  <span className=\"text-green-600 text-sm font-medium\">\n                    ✅ Completed\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Before/After Showcase */}\n        <div className=\"bg-gradient-to-r from-gray-50 to-blue-50 rounded-2xl p-8 mb-12\">\n          <h3 className=\"text-2xl font-bold text-center mb-8\">Before & After: AC Repair Results</h3>\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <div className=\"text-center\">\n              <div className=\"relative mb-4\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?ixlib=rb-4.0.3&w=600&h=400\"\n                  alt=\"Dirty AC unit before cleaning service\"\n                  className=\"w-full h-48 object-cover rounded-lg\"\n                  loading=\"lazy\"\n                />\n                <div className=\"absolute top-4 left-4 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-semibold\">\n                  BEFORE\n                </div>\n              </div>\n              <h4 className=\"font-semibold text-gray-900 mb-2\">Dirty & Inefficient AC</h4>\n              <p className=\"text-gray-600 text-sm\">\n                ❌ Poor cooling • ❌ High electricity bills • ❌ Bad air quality\n              </p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"relative mb-4\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1581094794329-c8112a89af12?ixlib=rb-4.0.3&w=600&h=400\"\n                  alt=\"Clean AC unit after professional service\"\n                  className=\"w-full h-48 object-cover rounded-lg\"\n                  loading=\"lazy\"\n                />\n                <div className=\"absolute top-4 left-4 bg-green-500 text-white px-3 py-1 rounded-full text-sm font-semibold\">\n                  AFTER\n                </div>\n              </div>\n              <h4 className=\"font-semibold text-gray-900 mb-2\">Clean & Efficient AC</h4>\n              <p className=\"text-gray-600 text-sm\">\n                ✅ Perfect cooling • ✅ Lower electricity bills • ✅ Fresh air quality\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Customer Work Testimonials */}\n        <div className=\"grid md:grid-cols-3 gap-6\">\n          <div className=\"bg-white border border-gray-200 rounded-lg p-6 shadow-sm\">\n            <div className=\"flex items-center mb-4\">\n              <img\n                src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&w=60&h=60\"\n                alt=\"Satisfied customer from Dahisar\"\n                className=\"w-12 h-12 rounded-full mr-3\"\n                loading=\"lazy\"\n              />\n              <div>\n                <div className=\"font-semibold text-gray-900\">Rajesh Sharma</div>\n                <div className=\"text-gray-600 text-sm\">Dahisar West</div>\n              </div>\n            </div>\n            <p className=\"text-gray-700 text-sm mb-3\">\n              \"Excellent work! They showed me photos during the repair process and explained everything clearly.\"\n            </p>\n            <div className=\"text-yellow-400 text-sm\">⭐⭐⭐⭐⭐</div>\n          </div>\n\n          <div className=\"bg-white border border-gray-200 rounded-lg p-6 shadow-sm\">\n            <div className=\"flex items-center mb-4\">\n              <img\n                src=\"https://images.unsplash.com/photo-1494790108755-2616b612b786?ixlib=rb-4.0.3&w=60&h=60\"\n                alt=\"Happy customer from Borivali\"\n                className=\"w-12 h-12 rounded-full mr-3\"\n                loading=\"lazy\"\n              />\n              <div>\n                <div className=\"font-semibold text-gray-900\">Priya Patel</div>\n                <div className=\"text-gray-600 text-sm\">Borivali East</div>\n              </div>\n            </div>\n            <p className=\"text-gray-700 text-sm mb-3\">\n              \"Professional installation with clean piping work. Very satisfied with the quality.\"\n            </p>\n            <div className=\"text-yellow-400 text-sm\">⭐⭐⭐⭐⭐</div>\n          </div>\n\n          <div className=\"bg-white border border-gray-200 rounded-lg p-6 shadow-sm\">\n            <div className=\"flex items-center mb-4\">\n              <img\n                src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&w=60&h=60\"\n                alt=\"Customer testimonial from Mira Road\"\n                className=\"w-12 h-12 rounded-full mr-3\"\n                loading=\"lazy\"\n              />\n              <div>\n                <div className=\"font-semibold text-gray-900\">Amit Kumar</div>\n                <div className=\"text-gray-600 text-sm\">Mira Road</div>\n              </div>\n            </div>\n            <p className=\"text-gray-700 text-sm mb-3\">\n              \"They send photos of the work progress on WhatsApp. Very transparent and professional service.\"\n            </p>\n            <div className=\"text-yellow-400 text-sm\">⭐⭐⭐⭐⭐</div>\n          </div>\n        </div>\n\n        {/* CTA Section */}\n        <div className=\"text-center mt-12\">\n          <div className=\"bg-trust-blue text-white rounded-2xl p-8 inline-block\">\n            <h3 className=\"text-2xl font-bold mb-4\">Want Similar Quality Work for Your AC?</h3>\n            <p className=\"mb-6 text-blue-100\">\n              Get the same professional service shown in these photos for your home or office\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <a\n                href=\"tel:+919876543210\"\n                className=\"bg-accent-orange hover:bg-accent-orange-light text-white font-bold py-3 px-8 rounded-lg transition-colors\"\n                data-testid=\"gallery-cta-call\"\n                onClick={() => trackEvent(\"gallery_section_call\", \"/\")}\n              >\n                📞 Call for Similar Service\n              </a>\n              <a\n                href=\"https://wa.me/919876543210?text=Hi%20I%20saw%20your%20AC%20service%20gallery.%20I%20need%20similar%20quality%20work%20for%20my%20AC\"\n                className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-3 px-8 rounded-lg transition-colors\"\n                data-testid=\"gallery-cta-whatsapp\"\n                onClick={() => trackEvent(\"gallery_section_whatsapp\", \"/\")}\n              >\n                💬 WhatsApp Gallery Reference\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":13910},"client/src/components/advanced-lead-magnet.tsx":{"content":"import { useState } from \"react\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function AdvancedLeadMagnet() {\n  const { trackEvent, trackConversion } = useAnalytics();\n  const [selectedService, setSelectedService] = useState(\"\");\n  const [selectedArea, setSelectedArea] = useState(\"\");\n\n  const services = [\n    { id: \"emergency-repair\", name: \"Emergency AC Repair\", price: \"₹499\", urgent: true },\n    { id: \"ac-installation\", name: \"AC Installation\", price: \"₹1,999\", urgent: false },\n    { id: \"ac-gas-filling\", name: \"AC Gas Filling\", price: \"₹1,500\", urgent: true },\n    { id: \"amc-service\", name: \"Annual AMC\", price: \"₹2,499\", urgent: false },\n    { id: \"ac-cleaning\", name: \"Deep AC Cleaning\", price: \"₹799\", urgent: false },\n  ];\n\n  const areas = [\n    \"Dahisar West\", \"Dahisar East\", \"Borivali West\", \"Borivali East\", \n    \"Mira Road\", \"Kandivali West\", \"Kandivali East\", \"Malad West\", \"Malad East\"\n  ];\n\n  const handleQuickCall = () => {\n    trackConversion(\"call\");\n    trackEvent(\"lead_magnet_call\", \"/\");\n    window.location.href = \"tel:+919876543210\";\n  };\n\n  const handleQuickWhatsApp = () => {\n    trackConversion(\"whatsapp\");\n    trackEvent(\"lead_magnet_whatsapp\", \"/\");\n    const message = `Hi! I need ${selectedService ? services.find(s => s.id === selectedService)?.name : 'AC service'} in ${selectedArea || 'Mumbai'}. Please provide quote.`;\n    window.open(`https://wa.me/919876543210?text=${encodeURIComponent(message)}`);\n  };\n\n  const handleServiceSelect = (serviceId: string) => {\n    setSelectedService(serviceId);\n    trackEvent(\"service_selector_click\", \"/\");\n  };\n\n  const selectedServiceData = services.find(s => s.id === selectedService);\n\n  return (\n    <div className=\"bg-gradient-to-br from-blue-50 to-indigo-100 py-12\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"bg-white rounded-2xl shadow-xl p-8\">\n          <div className=\"text-center mb-8\">\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              Get Instant Quote for Your AC Service\n            </h3>\n            <p className=\"text-gray-600\">\n              Select your service and area to get accurate pricing and book instantly\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {/* Service Selection */}\n            <div>\n              <h4 className=\"font-semibold text-gray-900 mb-4\">Select Your AC Service:</h4>\n              <div className=\"space-y-3\">\n                {services.map((service) => (\n                  <div\n                    key={service.id}\n                    onClick={() => handleServiceSelect(service.id)}\n                    className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${\n                      selectedService === service.id\n                        ? \"border-trust-blue bg-trust-blue/5\"\n                        : \"border-gray-200 hover:border-trust-blue/50\"\n                    }`}\n                    data-testid={`service-option-${service.id}`}\n                  >\n                    <div className=\"flex justify-between items-center\">\n                      <div className=\"flex items-center\">\n                        {service.urgent && (\n                          <span className=\"bg-red-100 text-red-600 text-xs px-2 py-1 rounded-full mr-2\">\n                            Emergency\n                          </span>\n                        )}\n                        <span className=\"font-medium\">{service.name}</span>\n                      </div>\n                      <span className=\"text-trust-blue font-bold\">{service.price}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Area Selection & CTA */}\n            <div>\n              <h4 className=\"font-semibold text-gray-900 mb-4\">Select Your Area:</h4>\n              <select\n                value={selectedArea}\n                onChange={(e) => setSelectedArea(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg mb-6\"\n                data-testid=\"area-selector\"\n              >\n                <option value=\"\">Choose your location</option>\n                {areas.map((area) => (\n                  <option key={area} value={area}>{area}</option>\n                ))}\n              </select>\n\n              {selectedServiceData && (\n                <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h5 className=\"font-semibold text-green-800\">\n                        {selectedServiceData.name}\n                      </h5>\n                      <p className=\"text-green-600 text-sm\">\n                        Starting from {selectedServiceData.price}\n                      </p>\n                      {selectedArea && (\n                        <p className=\"text-green-600 text-sm\">\n                          Service area: {selectedArea}\n                        </p>\n                      )}\n                    </div>\n                    {selectedServiceData.urgent && (\n                      <span className=\"text-red-600 font-bold text-sm\">\n                        🚨 Same Day Service Available\n                      </span>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              <div className=\"space-y-3\">\n                <Button\n                  onClick={handleQuickCall}\n                  className=\"w-full bg-trust-blue hover:bg-trust-blue-light text-white font-bold py-4 text-lg\"\n                  data-testid=\"quick-call-cta\"\n                >\n                  📞 Call Now - Get Instant Quote\n                </Button>\n                \n                <Button\n                  onClick={handleQuickWhatsApp}\n                  className=\"w-full bg-green-500 hover:bg-green-600 text-white font-bold py-4 text-lg\"\n                  data-testid=\"quick-whatsapp-cta\"\n                >\n                  💬 WhatsApp for Quick Response\n                </Button>\n              </div>\n\n              <div className=\"mt-4 text-center text-sm text-gray-600\">\n                <p>⚡ Average response time: 5 minutes</p>\n                <p>✅ No hidden charges • Pay after service completion</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":6520},"client/src/components/contact-form.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { InsertLead } from \"@shared/schema\";\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  phone: z.string().regex(/^[0-9]{10}$/, \"Please enter a valid 10-digit phone number\"),\n  service: z.string().min(1, \"Please select a service\"),\n  location: z.string().optional(),\n  message: z.string().optional(),\n});\n\ntype ContactFormData = z.infer<typeof contactFormSchema>;\n\nexport default function ContactForm() {\n  const { toast } = useToast();\n  const { trackEvent, trackConversion } = useAnalytics();\n  const queryClient = useQueryClient();\n\n  const form = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: \"\",\n      phone: \"\",\n      service: \"\",\n      location: \"\",\n      message: \"\",\n    },\n  });\n\n  const createLeadMutation = useMutation({\n    mutationFn: async (data: ContactFormData) => {\n      const leadData: InsertLead = {\n        ...data,\n        source: \"form\",\n      };\n      const response = await apiRequest(\"POST\", \"/api/leads\", leadData);\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/leads\"] });\n      toast({\n        title: \"Success!\",\n        description: \"Thank you! We will call you within 5 minutes to confirm your booking.\",\n      });\n      trackConversion(\"form\");\n      trackEvent(\"form_submit\", \"/\");\n      form.reset();\n    },\n    onError: (error) => {\n      console.error(\"Form submission error:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to submit form. Please try calling us directly.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ContactFormData) => {\n    createLeadMutation.mutate(data);\n  };\n\n  return (\n    <section className=\"py-16 bg-gray-50\" id=\"contact-form\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Get Your AC Fixed Today</h2>\n          <p className=\"text-lg text-gray-600\">Fill the form or call us directly for immediate assistance</p>\n        </div>\n        \n        <div className=\"grid lg:grid-cols-2 gap-12\">\n          {/* Contact Form */}\n          <div className=\"bg-white rounded-xl shadow-md p-8\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-6\">Book AC Service Now</h3>\n            \n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\" data-testid=\"contact-form\">\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Your Name *</FormLabel>\n                      <FormControl>\n                        <Input \n                          placeholder=\"Enter your full name\" \n                          data-testid=\"input-name\"\n                          {...field} \n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"phone\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Phone Number *</FormLabel>\n                      <FormControl>\n                        <Input \n                          placeholder=\"10-digit mobile number\" \n                          data-testid=\"input-phone\"\n                          {...field} \n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"service\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Service Needed *</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger data-testid=\"select-service\">\n                            <SelectValue placeholder=\"Select Service Type\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"repair\">AC Repair</SelectItem>\n                          <SelectItem value=\"installation\">AC Installation</SelectItem>\n                          <SelectItem value=\"amc\">Annual Maintenance (AMC)</SelectItem>\n                          <SelectItem value=\"sales\">AC Purchase</SelectItem>\n                          <SelectItem value=\"uninstallation\">AC Removal</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"location\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Your Location</FormLabel>\n                      <FormControl>\n                        <Input \n                          placeholder=\"e.g., Dahisar West, Borivali East\" \n                          data-testid=\"input-location\"\n                          {...field} \n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"message\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Message (Optional)</FormLabel>\n                      <FormControl>\n                        <Textarea \n                          placeholder=\"Describe your AC issue or requirements\"\n                          data-testid=\"textarea-message\"\n                          {...field} \n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <Button \n                  type=\"submit\" \n                  className=\"w-full bg-trust-blue hover:bg-trust-blue-light text-white font-bold py-4 px-6 rounded-lg\"\n                  disabled={createLeadMutation.isPending}\n                  data-testid=\"button-submit\"\n                >\n                  {createLeadMutation.isPending ? \"Submitting...\" : \"🔧 Book Service Now\"}\n                </Button>\n                \n                <div className=\"text-center text-sm text-gray-600\">\n                  Or call us directly: \n                  <a \n                    href=\"tel:+919876543210\" \n                    className=\"text-trust-blue font-semibold hover:underline ml-1\"\n                    data-testid=\"link-phone\"\n                    onClick={() => trackEvent(\"form_phone_click\", \"/\")}\n                  >\n                    +91 98765-43210\n                  </a>\n                </div>\n              </form>\n            </Form>\n          </div>\n          \n          {/* Map and Contact Info */}\n          <div className=\"space-y-8\">\n            {/* Service Areas Map */}\n            <div className=\"bg-white rounded-xl shadow-md p-6\">\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Our Service Areas</h3>\n              <div className=\"bg-gray-200 h-64 rounded-lg flex items-center justify-center\" data-testid=\"map-placeholder\">\n                <div className=\"text-center\">\n                  <svg className=\"w-12 h-12 text-gray-400 mx-auto mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                  </svg>\n                  <p className=\"text-gray-600\">Google Maps Integration</p>\n                </div>\n              </div>\n              <div className=\"mt-4 text-sm text-gray-600\" data-testid=\"service-areas\">\n                <strong>Currently Serving:</strong> Dahisar, Borivali, Mira Road, Kandivali, Malad & nearby areas\n              </div>\n            </div>\n            \n            {/* Contact Information */}\n            <div className=\"bg-white rounded-xl shadow-md p-6\">\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Contact Information</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-start\">\n                  <svg className=\"w-5 h-5 text-trust-blue mr-3 mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path>\n                  </svg>\n                  <div>\n                    <div className=\"font-medium\">Phone</div>\n                    <div className=\"text-gray-600\" data-testid=\"contact-phone\">+91 98765-43210</div>\n                    <div className=\"text-sm text-gray-500\">Available 9 AM - 9 PM</div>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <svg className=\"w-5 h-5 text-green-600 mr-3 mt-1\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.890-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488\"/>\n                  </svg>\n                  <div>\n                    <div className=\"font-medium\">WhatsApp</div>\n                    <div className=\"text-gray-600\" data-testid=\"contact-whatsapp\">+91 98765-43210</div>\n                    <div className=\"text-sm text-gray-500\">Quick response guaranteed</div>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <svg className=\"w-5 h-5 text-trust-blue mr-3 mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                  </svg>\n                  <div>\n                    <div className=\"font-medium\">Service Area</div>\n                    <div className=\"text-gray-600\">Dahisar West, Mumbai</div>\n                    <div className=\"text-sm text-gray-500\">Covering 10+ km radius</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":13135},"client/src/components/exit-intent-modal.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\n\ninterface ExitIntentModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function ExitIntentModal({ isOpen, onClose }: ExitIntentModalProps) {\n  const { trackEvent, trackConversion } = useAnalytics();\n  const [phone, setPhone] = useState(\"\");\n  const [area, setArea] = useState(\"\");\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (phone && area) {\n      trackConversion(\"form\");\n      trackEvent(\"exit_intent_form_submit\", \"modal\");\n      \n      // Here you would normally send to your lead capture system\n      alert(`Thank you! We'll call you within 30 minutes at ${phone} for AC service in ${area}.`);\n      onClose();\n    }\n  };\n\n  const handleCallClick = () => {\n    trackEvent(\"exit_intent_call\", \"modal\");\n    window.open(\"tel:+919876543210\");\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/70 flex items-center justify-center p-4 z-50 opacity-100 transition-opacity duration-300\">\n      <div className=\"bg-white rounded-2xl max-w-md w-full p-6 relative transform transition-transform duration-300 scale-100\">\n        <button\n          onClick={onClose}\n          className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600 text-2xl\"\n          data-testid=\"exit-modal-close\"\n        >\n          ×\n        </button>\n        \n        <div className=\"text-center mb-6\">\n          <div className=\"text-6xl mb-4\">🛑</div>\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n            Wait! Don't Leave Without Your Special Offer\n          </h2>\n          <p className=\"text-gray-600\">\n            Get <span className=\"text-red-500 font-bold\">₹500 OFF</span> your first AC service\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <input\n              type=\"tel\"\n              placeholder=\"Your mobile number\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-accent-orange focus:border-transparent\"\n              required\n              data-testid=\"exit-modal-phone\"\n            />\n          </div>\n          \n          <div>\n            <select\n              value={area}\n              onChange={(e) => setArea(e.target.value)}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-accent-orange focus:border-transparent\"\n              required\n              data-testid=\"exit-modal-area\"\n            >\n              <option value=\"\">Select your area</option>\n              <option value=\"Dahisar\">Dahisar</option>\n              <option value=\"Borivali\">Borivali</option>\n              <option value=\"Kandivali\">Kandivali</option>\n              <option value=\"Malad\">Malad</option>\n              <option value=\"Mira Road\">Mira Road</option>\n              <option value=\"Bhayandar\">Bhayandar</option>\n            </select>\n          </div>\n          \n          <button\n            type=\"submit\"\n            className=\"w-full bg-gradient-to-r from-accent-orange to-red-500 text-white font-bold py-3 px-6 rounded-lg hover:from-red-500 hover:to-accent-orange transition-all transform hover:scale-105\"\n            data-testid=\"exit-modal-submit\"\n          >\n            🎉 Claim ₹500 Discount Now\n          </button>\n        </form>\n        \n        <div className=\"text-center mt-4\">\n          <p className=\"text-sm text-gray-500 mb-3\">Or call us directly:</p>\n          <button\n            onClick={handleCallClick}\n            className=\"bg-green-500 text-white font-bold py-2 px-6 rounded-lg hover:bg-green-600 transition-colors\"\n            data-testid=\"exit-modal-call\"\n          >\n            📞 Call +91-98765-43210\n          </button>\n        </div>\n        \n        <div className=\"mt-4 p-3 bg-yellow-50 rounded-lg\">\n          <div className=\"flex items-center text-sm text-yellow-800\">\n            <span className=\"mr-2\">⚡</span>\n            <span>Limited time offer • Same-day service available • No hidden charges</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":4296},"client/src/components/faq-section.tsx":{"content":"import { useState } from \"react\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\n\nconst faqs = [\n  {\n    id: \"cost\",\n    question: \"What is the cost of AC repair in Dahisar, Mumbai?\",\n    answer: \"AC repair costs start from ₹499 for basic diagnosis and minor repairs. Gas filling costs ₹1,500-2,500, compressor repair ₹3,500-8,000, PCB repair ₹2,500, and filter cleaning ₹299. We provide upfront transparent pricing with no hidden charges.\",\n  },\n  {\n    id: \"speed\",\n    question: \"How quickly can you provide same-day AC service in Mumbai Western Suburbs?\",\n    answer: \"We provide same-day emergency AC repair within 2-4 hours in Dahisar, Borivali, Mira Road, Kandivali, and Malad. Call +91-98765-43210 for immediate service. Non-emergency services can be scheduled within 24 hours.\",\n  },\n  {\n    id: \"emergency\",\n    question: \"Do you provide 24x7 emergency AC repair in Dahisar?\",\n    answer: \"Yes, we provide emergency AC repair services 9 AM to 9 PM, 7 days a week. For urgent cooling issues during Mumbai's hot weather, we guarantee same-day service with our mobile AC repair van.\",\n  },\n  {\n    id: \"warranty\",\n    question: \"What warranty do you provide on AC repairs and installation?\",\n    answer: \"We provide 30-day warranty on all AC repair work, 90-day warranty on parts replacement, and 1-year comprehensive warranty on new AC installations. All work is covered against defects in workmanship.\",\n  },\n  {\n    id: \"brands\",\n    question: \"Which AC brands do you service in Mumbai? (LG, Samsung, Voltas)\",\n    answer: \"We service all major AC brands: LG, Samsung, Voltas, Godrej, Hitachi, Daikin, Blue Star, Carrier, O General, Mitsubishi, Panasonic, and Whirlpool. Our certified technicians handle split, window, cassette, and VRV AC systems.\",\n  },\n  {\n    id: \"gas-filling\",\n    question: \"How much does AC gas filling cost in Dahisar? Is it safe?\",\n    answer: \"AC gas filling costs ₹1,500-2,500 depending on AC tonnage and gas type (R22, R32, R410A). We use nitrogen pressure testing to detect leaks and ensure safety. Includes gas leak detection and system performance check.\",\n  },\n  {\n    id: \"installation\",\n    question: \"What is included in AC installation service in Mumbai?\",\n    answer: \"AC installation includes wall mounting, copper piping (up to 3 meters), electrical connections, drainage setup, gas charging, and testing. Additional piping costs ₹85/foot. We handle all brands with proper mounting brackets.\",\n  },\n  {\n    id: \"payment\",\n    question: \"What payment modes do you accept? Can I pay after service?\",\n    answer: \"Yes, payment is due only after service completion. We accept cash, UPI (Google Pay, PhonePe, Paytm), bank transfer, and card payments. EMI options available for AC installations and repairs above ₹10,000.\",\n  },\n  {\n    id: \"summer-offer\",\n    question: \"Do you have any special offers for AC service before summer?\",\n    answer: \"Yes! Current summer offer: AC service starting ₹499, FREE filter cleaning with AMC booking, and 10% discount on annual maintenance contracts. Limited time offer valid till March 31st.\",\n  },\n  {\n    id: \"amc\",\n    question: \"What is included in Annual AC Maintenance Contract (AMC)?\",\n    answer: \"AMC includes 4 scheduled visits, deep cleaning, gas top-up if needed, filter replacement, electrical check, performance optimization, and priority emergency service. Annual AMC costs ₹2,499 and saves money on repairs.\",\n  },\n];\n\nexport default function FAQSection() {\n  return (\n    <section className=\"py-16 bg-white\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Frequently Asked Questions</h2>\n          <p className=\"text-lg text-gray-600\">Get answers to common AC service questions</p>\n        </div>\n        \n        <Accordion type=\"single\" collapsible className=\"space-y-4\">\n          {faqs.map((faq) => (\n            <AccordionItem key={faq.id} value={faq.id} className=\"border border-gray-200 rounded-lg\">\n              <AccordionTrigger \n                className=\"text-left p-6 hover:no-underline\"\n                data-testid={`faq-trigger-${faq.id}`}\n              >\n                <span className=\"text-lg font-semibold text-gray-900\">{faq.question}</span>\n              </AccordionTrigger>\n              <AccordionContent \n                className=\"px-6 pb-6 text-gray-600\"\n                data-testid={`faq-content-${faq.id}`}\n              >\n                {faq.answer}\n              </AccordionContent>\n            </AccordionItem>\n          ))}\n        </Accordion>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4718},"client/src/components/floating-widgets.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\n\nexport default function FloatingWidgets() {\n  const { trackEvent } = useAnalytics();\n  const [showCallAnimation, setShowCallAnimation] = useState(false);\n  const [showWhatsAppTooltip, setShowWhatsAppTooltip] = useState(false);\n\n  useEffect(() => {\n    // Show call animation every 30 seconds\n    const interval = setInterval(() => {\n      setShowCallAnimation(true);\n      setTimeout(() => setShowCallAnimation(false), 3000);\n    }, 30000);\n\n    // Show WhatsApp tooltip after 10 seconds\n    const tooltipTimer = setTimeout(() => {\n      setShowWhatsAppTooltip(true);\n      setTimeout(() => setShowWhatsAppTooltip(false), 5000);\n    }, 10000);\n\n    return () => {\n      clearInterval(interval);\n      clearTimeout(tooltipTimer);\n    };\n  }, []);\n\n  const handleCallClick = () => {\n    trackEvent(\"floating_call_click\", \"widget\");\n    window.open(\"tel:+919876543210\");\n  };\n\n  const handleWhatsAppClick = () => {\n    trackEvent(\"floating_whatsapp_click\", \"widget\");\n    window.open(\"https://wa.me/919876543210?text=Hi%20I%20need%20AC%20service%20in%20Mumbai.%20Please%20provide%20quote.\", \"_blank\");\n  };\n\n  const handleVideoCallClick = () => {\n    trackEvent(\"floating_video_call_click\", \"widget\");\n    // In real implementation, this would open video call interface\n    alert(\"Video call feature coming soon! Please call +91-98765-43210 for immediate assistance.\");\n  };\n\n  return (\n    <>\n      {/* Floating Call Button */}\n      <div className=\"fixed bottom-24 right-6 z-40 md:bottom-8\">\n        <button\n          onClick={handleCallClick}\n          className={`bg-accent-orange hover:bg-accent-orange-light text-white rounded-full p-4 shadow-lg transition-all transform hover:scale-110 ${\n            showCallAnimation ? 'animate-bounce ring-4 ring-accent-orange/30' : ''\n          }`}\n          data-testid=\"floating-call-button\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path>\n          </svg>\n        </button>\n        \n        {showCallAnimation && (\n          <div className=\"absolute -top-12 right-0 bg-black text-white px-3 py-1 rounded-lg text-sm whitespace-nowrap\">\n            📞 Call for instant help!\n            <div className=\"absolute top-full right-4 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-black\"></div>\n          </div>\n        )}\n      </div>\n\n      {/* Floating WhatsApp Button */}\n      <div className=\"fixed bottom-40 right-6 z-40 md:bottom-24\">\n        <button\n          onClick={handleWhatsAppClick}\n          className=\"bg-green-500 hover:bg-green-600 text-white rounded-full p-4 shadow-lg transition-all transform hover:scale-110\"\n          data-testid=\"floating-whatsapp-button\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.890-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488\"/>\n          </svg>\n        </button>\n        \n        {showWhatsAppTooltip && (\n          <div className=\"absolute -top-12 right-0 bg-green-600 text-white px-3 py-1 rounded-lg text-sm whitespace-nowrap\">\n            💬 Quick WhatsApp support!\n            <div className=\"absolute top-full right-4 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-green-600\"></div>\n          </div>\n        )}\n      </div>\n\n      {/* Floating Video Call Button */}\n      <div className=\"fixed bottom-56 right-6 z-40 md:bottom-40\">\n        <button\n          onClick={handleVideoCallClick}\n          className=\"bg-purple-600 hover:bg-purple-700 text-white rounded-full p-4 shadow-lg transition-all transform hover:scale-110\"\n          data-testid=\"floating-video-call-button\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\"/>\n          </svg>\n        </button>\n      </div>\n\n      {/* Live Customer Notifications */}\n      <div className=\"fixed top-24 right-6 z-30 space-y-3 max-w-xs hidden lg:block\">\n        <div className=\"bg-white border-l-4 border-green-500 rounded-lg shadow-lg p-4 transform transition-all duration-500 animate-slide-in-right\">\n          <div className=\"flex items-center\">\n            <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse mr-3\"></div>\n            <div>\n              <div className=\"text-sm font-medium text-gray-900\">Rajesh from Dahisar</div>\n              <div className=\"text-xs text-gray-600\">AC repair booking confirmed</div>\n              <div className=\"text-xs text-gray-500\">2 minutes ago</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Floating Offer Banner */}\n      <div className=\"fixed left-6 top-1/2 transform -translate-y-1/2 z-30 max-w-xs hidden lg:block\">\n        <div className=\"bg-gradient-to-r from-accent-orange to-red-500 text-white rounded-lg p-4 shadow-lg\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold\">🔥 Today Only!</div>\n            <div className=\"text-sm\">AC Service + Cleaning</div>\n            <div className=\"text-2xl font-bold\">₹499</div>\n            <div className=\"text-xs line-through opacity-75\">₹1,299</div>\n            <button \n              onClick={handleCallClick}\n              className=\"bg-white text-accent-orange font-bold py-2 px-4 rounded mt-2 text-sm hover:bg-gray-100 transition-colors w-full\"\n              data-testid=\"floating-offer-call\"\n            >\n              📞 Book Now\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}","size_bytes":7129},"client/src/components/footer.tsx":{"content":"import { useAnalytics } from \"@/hooks/use-analytics\";\n\nexport default function Footer() {\n  const { trackEvent, trackConversion } = useAnalytics();\n\n  const handleFooterCallClick = () => {\n    trackConversion(\"call\");\n    trackEvent(\"footer_call_click\", \"/\");\n  };\n\n  const handleFooterWhatsAppClick = () => {\n    trackConversion(\"whatsapp\");\n    trackEvent(\"footer_whatsapp_click\", \"/\");\n  };\n\n  return (\n    <footer className=\"bg-gray-900 text-white py-12\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid md:grid-cols-4 gap-8\">\n          <div className=\"col-span-2\">\n            <h3 className=\"text-xl font-bold mb-4\">Tara Air Conditioning Sales & Service</h3>\n            <p className=\"text-gray-300 mb-4\">\n              Professional AC repair, installation, and maintenance services in Mumbai's Western Suburbs. \n              Trusted by 500+ families since 2013.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a \n                href=\"tel:+919876543210\" \n                onClick={handleFooterCallClick}\n                data-testid=\"footer-call\"\n                className=\"bg-trust-blue hover:bg-trust-blue-light px-4 py-2 rounded-lg transition-colors\"\n              >\n                📞 Call Now\n              </a>\n              <a \n                href=\"https://wa.me/919876543210\" \n                onClick={handleFooterWhatsAppClick}\n                data-testid=\"footer-whatsapp\"\n                className=\"bg-green-500 hover:bg-green-600 px-4 py-2 rounded-lg transition-colors\"\n              >\n                💬 WhatsApp\n              </a>\n            </div>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Our Services</h4>\n            <ul className=\"space-y-2 text-gray-300\">\n              <li><a href=\"#\" className=\"hover:text-white\" data-testid=\"footer-service-repair\">AC Repair</a></li>\n              <li><a href=\"#\" className=\"hover:text-white\" data-testid=\"footer-service-installation\">AC Installation</a></li>\n              <li><a href=\"#\" className=\"hover:text-white\" data-testid=\"footer-service-amc\">Annual AMC</a></li>\n              <li><a href=\"#\" className=\"hover:text-white\" data-testid=\"footer-service-sales\">AC Sales</a></li>\n              <li><a href=\"#\" className=\"hover:text-white\" data-testid=\"footer-service-gas\">Gas Filling</a></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Service Areas</h4>\n            <ul className=\"space-y-2 text-gray-300\" data-testid=\"footer-service-areas\">\n              <li>Dahisar West & East</li>\n              <li>Borivali West & East</li>\n              <li>Mira Road</li>\n              <li>Kandivali West & East</li>\n              <li>Malad West & East</li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-gray-800 mt-8 pt-8 flex flex-col md:flex-row justify-between items-center\">\n          <div className=\"text-gray-400\" data-testid=\"footer-copyright\">\n            © 2024 Tara Air Conditioning Sales & Service. All rights reserved.\n          </div>\n          <div className=\"flex space-x-6 mt-4 md:mt-0\">\n            <a href=\"#\" className=\"text-gray-400 hover:text-white\" data-testid=\"footer-privacy\">Privacy Policy</a>\n            <a href=\"#\" className=\"text-gray-400 hover:text-white\" data-testid=\"footer-terms\">Terms of Service</a>\n            <a href=\"#\" className=\"text-gray-400 hover:text-white\" data-testid=\"footer-contact\">Contact</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":3629},"client/src/components/hero-section.tsx":{"content":"import { useState } from \"react\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\nimport InteractiveServiceModal from \"./interactive-service-modal\";\n\nexport default function HeroSection() {\n  const { trackEvent, trackConversion } = useAnalytics();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [showVideoPreview, setShowVideoPreview] = useState(false);\n\n  const handleCallClick = () => {\n    trackConversion(\"call\");\n    trackEvent(\"hero_call_click\", \"/\");\n  };\n\n  const handleWhatsAppClick = () => {\n    trackConversion(\"whatsapp\");\n    trackEvent(\"hero_whatsapp_click\", \"/\");\n  };\n\n  const handleQuickQuoteClick = () => {\n    setIsModalOpen(true);\n    trackEvent(\"quick_quote_click\", \"hero\");\n  };\n\n  const handleVideoPreviewClick = () => {\n    setShowVideoPreview(true);\n    trackEvent(\"video_preview_click\", \"hero\");\n  };\n\n  return (\n    <section className=\"bg-gradient-to-br from-trust-blue to-trust-blue-light text-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid lg:grid-cols-2 gap-12 py-12 lg:py-20 items-center\">\n          <div className=\"space-y-6\">\n            <div className=\"inline-block bg-accent-orange px-4 py-2 rounded-full text-sm font-medium animate-pulse\">\n              🔥 Limited Time: AC Service Starting ₹499 Only\n            </div>\n            <h1 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold leading-tight\">\n              #1 AC Repair & Installation in <span className=\"text-accent-orange\">Dahisar Mumbai</span>\n            </h1>\n            <h2 className=\"text-xl sm:text-2xl font-semibold text-blue-100 mt-2\">\n              Same-Day Emergency AC Service | All Brands | 10+ Years Experience\n            </h2>\n            <p className=\"text-lg sm:text-xl text-blue-100 mt-4\">\n              ✅ Licensed Technicians ✅ Transparent Pricing ✅ Warranty on All Repairs<br/>\n              Serving 500+ Happy Customers in Dahisar, Borivali, Mira Road, Kandivali & Malad\n            </p>\n            \n            {/* Trust Badges */}\n            <div className=\"flex flex-wrap items-center gap-4 mt-4\">\n              <div className=\"flex items-center bg-white/20 px-3 py-1 rounded-full text-sm\">\n                <span className=\"text-yellow-300 mr-1\">⭐⭐⭐⭐⭐</span>\n                <span>4.8/5 Google Rating</span>\n              </div>\n              <div className=\"flex items-center bg-white/20 px-3 py-1 rounded-full text-sm\">\n                <span className=\"mr-1\">🏆</span>\n                <span>500+ Jobs Completed</span>\n              </div>\n              <div className=\"flex items-center bg-white/20 px-3 py-1 rounded-full text-sm\">\n                <span className=\"mr-1\">⚡</span>\n                <span>2-4 Hours Response</span>\n              </div>\n            </div>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 pt-4\">\n              <a \n                href=\"tel:+919876543210\" \n                onClick={handleCallClick}\n                data-testid=\"hero-call\"\n                className=\"bg-accent-orange hover:bg-accent-orange-light text-white font-bold py-4 px-8 rounded-lg text-lg flex items-center justify-center transition-all transform hover:scale-105\"\n              >\n                <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path>\n                </svg>\n                Call Now - ₹499 Service\n              </a>\n              \n              <button\n                onClick={handleQuickQuoteClick}\n                data-testid=\"hero-quick-quote\"\n                className=\"bg-white text-trust-blue font-bold py-4 px-8 rounded-lg text-lg flex items-center justify-center transition-all hover:bg-gray-100 border-2 border-white\"\n              >\n                <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"/>\n                </svg>\n                Get Instant Quote\n              </button>\n              \n              <a \n                href=\"https://wa.me/919876543210?text=Hi%20I%20need%20AC%20repair%20in%20Dahisar.%20My%20contact%20number%20is%20\" \n                onClick={handleWhatsAppClick}\n                data-testid=\"hero-whatsapp\"\n                className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-4 px-8 rounded-lg text-lg flex items-center justify-center transition-all\"\n              >\n                <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.890-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488\"/>\n                </svg>\n                💬 WhatsApp Us\n              </a>\n            </div>\n\n            <div className=\"text-sm text-blue-200 pt-2\">\n              ✓ Pay after service if not satisfied • ✓ Same-day service guarantee • ✓ All brands covered\n            </div>\n          </div>\n          \n          <div className=\"relative\">\n            <img \n              src=\"https://images.unsplash.com/photo-1581094794329-c8112a89af12?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\" \n              alt=\"AC repair technician working in Dahisar Mumbai\" \n              className=\"rounded-xl shadow-2xl w-full h-auto\"\n              loading=\"lazy\"\n            />\n            \n            {/* Video Preview Overlay */}\n            <button\n              onClick={handleVideoPreviewClick}\n              className=\"absolute inset-0 flex items-center justify-center bg-black/40 rounded-xl opacity-0 hover:opacity-100 transition-opacity duration-300 group\"\n              data-testid=\"hero-video-preview\"\n            >\n              <div className=\"bg-white/20 backdrop-blur-sm rounded-full p-6 group-hover:scale-110 transition-transform\">\n                <svg className=\"w-12 h-12 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M8 5v14l11-7z\"/>\n                </svg>\n              </div>\n              <div className=\"absolute bottom-4 left-4 text-white\">\n                <div className=\"text-sm font-medium\">▶ Watch Our Work</div>\n                <div className=\"text-xs opacity-80\">Real AC repair videos</div>\n              </div>\n            </button>\n\n            {/* Customer Count Badge */}\n            <div className=\"absolute -bottom-6 -left-6 bg-white text-trust-blue p-4 rounded-lg shadow-lg\">\n              <div className=\"text-2xl font-bold\" data-testid=\"customer-count\">500+</div>\n              <div className=\"text-sm\">Happy Customers</div>\n            </div>\n\n            {/* Live Chat Badge */}\n            <div className=\"absolute top-4 right-4 bg-green-500 text-white px-3 py-2 rounded-full text-sm font-medium animate-pulse\">\n              🟢 Online Now\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Interactive Service Modal */}\n      <InteractiveServiceModal \n        isOpen={isModalOpen} \n        onClose={() => setIsModalOpen(false)} \n      />\n\n      {/* Video Preview Modal */}\n      {showVideoPreview && (\n        <div className=\"fixed inset-0 bg-black/80 flex items-center justify-center p-4 z-50\" onClick={() => setShowVideoPreview(false)}>\n          <div className=\"relative max-w-4xl w-full aspect-video\" onClick={(e) => e.stopPropagation()}>\n            <iframe\n              src=\"https://www.youtube.com/embed/dQw4w9WgXcQ?autoplay=1\"\n              title=\"AC Repair Process Video\"\n              className=\"w-full h-full rounded-lg\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            ></iframe>\n            <button \n              onClick={() => setShowVideoPreview(false)}\n              className=\"absolute -top-10 right-0 text-white hover:text-gray-300 text-2xl\"\n              data-testid=\"video-modal-close\"\n            >\n              ✕\n            </button>\n          </div>\n        </div>\n      )}\n    </section>\n  );\n}\n","size_bytes":9491},"client/src/components/interactive-service-modal.tsx":{"content":"import { useState } from \"react\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\n\ninterface ServiceModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function InteractiveServiceModal({ isOpen, onClose }: ServiceModalProps) {\n  const { trackEvent } = useAnalytics();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selectedService, setSelectedService] = useState(\"\");\n  const [selectedArea, setSelectedArea] = useState(\"\");\n  const [selectedUrgency, setSelectedUrgency] = useState(\"\");\n  const [customerInfo, setCustomerInfo] = useState({\n    name: \"\",\n    phone: \"\",\n    problem: \"\"\n  });\n\n  const services = [\n    { id: \"repair\", name: \"AC Repair\", icon: \"🔧\", price: \"₹499 onwards\", description: \"Fix cooling, noise, leakage issues\" },\n    { id: \"installation\", name: \"AC Installation\", icon: \"⚡\", price: \"₹2,999 onwards\", description: \"Complete installation with piping\" },\n    { id: \"maintenance\", name: \"AC Service/AMC\", icon: \"🛠️\", price: \"₹799 onwards\", description: \"Cleaning, gas check, maintenance\" },\n    { id: \"gas-filling\", name: \"Gas Filling\", icon: \"❄️\", price: \"₹1,499 onwards\", description: \"Gas refill with leak detection\" }\n  ];\n\n  const areas = [\n    \"Dahisar West\", \"Dahisar East\", \"Borivali West\", \"Borivali East\",\n    \"Mira Road East\", \"Mira Road West\", \"Kandivali West\", \"Kandivali East\",\n    \"Malad West\", \"Malad East\", \"Bhayander\", \"Naigaon\"\n  ];\n\n  const urgencyLevels = [\n    { id: \"emergency\", name: \"Emergency (Same Day)\", icon: \"🚨\", extra: \"+₹200\" },\n    { id: \"urgent\", name: \"Urgent (Within 24 hrs)\", icon: \"⚡\", extra: \"No extra charge\" },\n    { id: \"normal\", name: \"Normal (2-3 days)\", icon: \"📅\", extra: \"10% discount\" }\n  ];\n\n  const handleServiceSelect = (serviceId: string) => {\n    setSelectedService(serviceId);\n    setCurrentStep(2);\n    trackEvent(\"modal_service_select\", `/service-${serviceId}`);\n  };\n\n  const handleAreaSelect = (area: string) => {\n    setSelectedArea(area);\n    setCurrentStep(3);\n    trackEvent(\"modal_area_select\", `/area-${area}`);\n  };\n\n  const handleUrgencySelect = (urgencyId: string) => {\n    setSelectedUrgency(urgencyId);\n    setCurrentStep(4);\n    trackEvent(\"modal_urgency_select\", `/urgency-${urgencyId}`);\n  };\n\n  const handleSubmit = () => {\n    const selectedServiceObj = services.find(s => s.id === selectedService);\n    const urgencyObj = urgencyLevels.find(u => u.id === selectedUrgency);\n    \n    const message = `Hi, I need ${selectedServiceObj?.name} in ${selectedArea}. \nUrgency: ${urgencyObj?.name}\nCustomer: ${customerInfo.name}\nPhone: ${customerInfo.phone}\nProblem: ${customerInfo.problem}\nFrom: Tara AC Website`;\n\n    const encodedMessage = encodeURIComponent(message);\n    window.open(`https://wa.me/919876543210?text=${encodedMessage}`, '_blank');\n    \n    trackEvent(\"modal_submit\", `/complete-${selectedService}-${selectedArea}-${selectedUrgency}`);\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/60 flex items-center justify-center p-4 z-50\" onClick={onClose}>\n      <div \n        className=\"bg-white rounded-2xl max-w-md w-full max-h-[90vh] overflow-y-auto\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Header */}\n        <div className=\"bg-trust-blue text-white p-6 rounded-t-2xl\">\n          <div className=\"flex justify-between items-center\">\n            <h2 className=\"text-xl font-bold\">Get Instant Quote</h2>\n            <button \n              onClick={onClose}\n              className=\"text-white hover:text-gray-200\"\n              data-testid=\"modal-close\"\n            >\n              ✕\n            </button>\n          </div>\n          <div className=\"mt-2 flex space-x-2\">\n            {[1, 2, 3, 4].map((step) => (\n              <div\n                key={step}\n                className={`h-2 flex-1 rounded ${\n                  step <= currentStep ? 'bg-accent-orange' : 'bg-blue-400'\n                }`}\n              />\n            ))}\n          </div>\n        </div>\n\n        <div className=\"p-6\">\n          {/* Step 1: Service Selection */}\n          {currentStep === 1 && (\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">What service do you need?</h3>\n              <div className=\"space-y-3\">\n                {services.map((service) => (\n                  <button\n                    key={service.id}\n                    onClick={() => handleServiceSelect(service.id)}\n                    className=\"w-full p-4 border-2 border-gray-200 rounded-lg hover:border-trust-blue hover:bg-blue-50 transition-all text-left\"\n                    data-testid={`modal-service-${service.id}`}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <span className=\"text-2xl mr-3\">{service.icon}</span>\n                        <div>\n                          <div className=\"font-medium\">{service.name}</div>\n                          <div className=\"text-sm text-gray-600\">{service.description}</div>\n                        </div>\n                      </div>\n                      <div className=\"text-trust-blue font-semibold\">{service.price}</div>\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Step 2: Area Selection */}\n          {currentStep === 2 && (\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">Select your area:</h3>\n              <div className=\"grid grid-cols-2 gap-2 max-h-60 overflow-y-auto\">\n                {areas.map((area) => (\n                  <button\n                    key={area}\n                    onClick={() => handleAreaSelect(area)}\n                    className=\"p-3 border border-gray-200 rounded-lg hover:border-trust-blue hover:bg-blue-50 transition-all text-sm\"\n                    data-testid={`modal-area-${area.replace(/\\s+/g, '-').toLowerCase()}`}\n                  >\n                    📍 {area}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Step 3: Urgency Selection */}\n          {currentStep === 3 && (\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">When do you need service?</h3>\n              <div className=\"space-y-3\">\n                {urgencyLevels.map((urgency) => (\n                  <button\n                    key={urgency.id}\n                    onClick={() => handleUrgencySelect(urgency.id)}\n                    className=\"w-full p-4 border-2 border-gray-200 rounded-lg hover:border-trust-blue hover:bg-blue-50 transition-all text-left\"\n                    data-testid={`modal-urgency-${urgency.id}`}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <span className=\"text-xl mr-3\">{urgency.icon}</span>\n                        <div className=\"font-medium\">{urgency.name}</div>\n                      </div>\n                      <div className={`text-sm font-medium ${\n                        urgency.id === 'emergency' ? 'text-red-600' : \n                        urgency.id === 'normal' ? 'text-green-600' : 'text-gray-600'\n                      }`}>\n                        {urgency.extra}\n                      </div>\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Step 4: Customer Information */}\n          {currentStep === 4 && (\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">Your contact details:</h3>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Your Name *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-trust-blue focus:border-transparent\"\n                    placeholder=\"Enter your name\"\n                    data-testid=\"modal-input-name\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Phone Number *\n                  </label>\n                  <input\n                    type=\"tel\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-trust-blue focus:border-transparent\"\n                    placeholder=\"Enter your phone number\"\n                    data-testid=\"modal-input-phone\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Describe the problem (optional)\n                  </label>\n                  <textarea\n                    value={customerInfo.problem}\n                    onChange={(e) => setCustomerInfo({...customerInfo, problem: e.target.value})}\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-trust-blue focus:border-transparent\"\n                    rows={3}\n                    placeholder=\"e.g., AC not cooling, making noise, water leakage...\"\n                    data-testid=\"modal-input-problem\"\n                  />\n                </div>\n\n                {/* Summary */}\n                <div className=\"bg-gray-50 rounded-lg p-4 mt-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Service Summary:</h4>\n                  <div className=\"text-sm text-gray-600 space-y-1\">\n                    <div>• Service: <span className=\"font-medium\">{services.find(s => s.id === selectedService)?.name}</span></div>\n                    <div>• Area: <span className=\"font-medium\">{selectedArea}</span></div>\n                    <div>• Urgency: <span className=\"font-medium\">{urgencyLevels.find(u => u.id === selectedUrgency)?.name}</span></div>\n                  </div>\n                </div>\n\n                <button\n                  onClick={handleSubmit}\n                  disabled={!customerInfo.name || !customerInfo.phone}\n                  className=\"w-full bg-green-500 hover:bg-green-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white font-bold py-4 rounded-lg transition-colors\"\n                  data-testid=\"modal-submit-whatsapp\"\n                >\n                  💬 Send Quote Request on WhatsApp\n                </button>\n\n                <div className=\"text-center\">\n                  <button\n                    onClick={() => window.open('tel:+919876543210')}\n                    className=\"text-trust-blue hover:underline font-medium\"\n                    data-testid=\"modal-call-instead\"\n                  >\n                    📞 Or call directly: +91 98765-43210\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":11413},"client/src/components/live-chat-widget.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\n\nexport default function LiveChatWidget() {\n  const { trackEvent } = useAnalytics();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([\n    { type: 'bot', text: 'Hi! I\\'m here to help with your AC service needs. What can I assist you with today?', time: new Date() }\n  ]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n\n  const quickReplies = [\n    \"AC not cooling properly\",\n    \"Need installation quote\",\n    \"Emergency repair needed\",\n    \"Schedule maintenance\"\n  ];\n\n  const handleSendMessage = (message: string) => {\n    if (!message.trim()) return;\n    \n    trackEvent(\"live_chat_message\", \"widget\");\n    \n    setMessages(prev => [...prev, { type: 'user', text: message, time: new Date() }]);\n    setNewMessage('');\n    setIsTyping(true);\n    \n    // Simulate bot response\n    setTimeout(() => {\n      setIsTyping(false);\n      setMessages(prev => [...prev, { \n        type: 'bot', \n        text: 'Thanks for your message! For immediate assistance, please call +91-98765-43210 or use WhatsApp. Our technician will respond within 2-4 hours.',\n        time: new Date() \n      }]);\n    }, 2000);\n  };\n\n  const handleQuickReply = (reply: string) => {\n    handleSendMessage(reply);\n  };\n\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n    if (!isOpen) {\n      trackEvent(\"live_chat_open\", \"widget\");\n    }\n  };\n\n  return (\n    <>\n      {/* Chat Window */}\n      {isOpen && (\n        <div className=\"fixed bottom-24 right-6 w-80 h-96 bg-white rounded-lg shadow-2xl border z-40 flex flex-col\">\n          {/* Header */}\n          <div className=\"bg-trust-blue text-white p-4 rounded-t-lg flex justify-between items-center\">\n            <div className=\"flex items-center\">\n              <div className=\"w-3 h-3 bg-green-400 rounded-full mr-2 animate-pulse\"></div>\n              <div>\n                <div className=\"font-bold\">Tara AC Support</div>\n                <div className=\"text-xs opacity-80\">Online now</div>\n              </div>\n            </div>\n            <button\n              onClick={toggleChat}\n              className=\"text-white hover:text-gray-300\"\n              data-testid=\"chat-close\"\n            >\n              ×\n            </button>\n          </div>\n          \n          {/* Messages */}\n          <div className=\"flex-1 p-4 overflow-y-auto space-y-3\">\n            {messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`flex ${msg.type === 'user' ? 'justify-end' : 'justify-start'}`}\n              >\n                <div\n                  className={`max-w-xs px-3 py-2 rounded-lg text-sm ${\n                    msg.type === 'user'\n                      ? 'bg-trust-blue text-white'\n                      : 'bg-gray-100 text-gray-800'\n                  }`}\n                >\n                  {msg.text}\n                </div>\n              </div>\n            ))}\n            \n            {isTyping && (\n              <div className=\"flex justify-start\">\n                <div className=\"bg-gray-100 text-gray-800 px-3 py-2 rounded-lg text-sm\">\n                  <div className=\"flex space-x-1\">\n                    <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                    <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{animationDelay: '0.1s'}}></div>\n                    <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}}></div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            {/* Quick Replies */}\n            {messages.length === 1 && (\n              <div className=\"space-y-2\">\n                <div className=\"text-xs text-gray-500 text-center\">Quick options:</div>\n                {quickReplies.map((reply, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handleQuickReply(reply)}\n                    className=\"w-full text-left px-3 py-2 bg-blue-50 text-trust-blue rounded-lg text-sm hover:bg-blue-100 transition-colors\"\n                    data-testid={`quick-reply-${index}`}\n                  >\n                    {reply}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n          \n          {/* Input */}\n          <div className=\"p-4 border-t\">\n            <div className=\"flex space-x-2\">\n              <input\n                type=\"text\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && handleSendMessage(newMessage)}\n                placeholder=\"Type your message...\"\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-trust-blue focus:border-transparent\"\n                data-testid=\"chat-input\"\n              />\n              <button\n                onClick={() => handleSendMessage(newMessage)}\n                className=\"bg-trust-blue text-white px-4 py-2 rounded-lg hover:bg-trust-blue-light transition-colors\"\n                data-testid=\"chat-send\"\n              >\n                →\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Chat Button */}\n      <div className=\"fixed bottom-6 right-6 z-40\">\n        <button\n          onClick={toggleChat}\n          className=\"bg-trust-blue hover:bg-trust-blue-light text-white rounded-full p-4 shadow-lg transition-all transform hover:scale-110\"\n          data-testid=\"chat-toggle\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"/>\n          </svg>\n          \n          {/* Notification Badge */}\n          <div className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center animate-pulse\">\n            1\n          </div>\n        </button>\n      </div>\n    </>\n  );\n}","size_bytes":6356},"client/src/components/pricing-table.tsx":{"content":"import { useAnalytics } from \"@/hooks/use-analytics\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function PricingTable() {\n  const { trackEvent, trackConversion } = useAnalytics();\n\n  const pricingData = [\n    {\n      category: \"Emergency AC Repair\",\n      popular: true,\n      services: [\n        { name: \"AC Not Cooling\", price: \"₹499\", time: \"Same Day\" },\n        { name: \"AC Gas Filling/Leak Repair\", price: \"₹1,500\", time: \"2-3 Hours\" },\n        { name: \"Compressor Repair\", price: \"₹3,500\", time: \"Same Day\" },\n        { name: \"PCB/Control Board Repair\", price: \"₹2,500\", time: \"Same Day\" },\n        { name: \"Filter Cleaning\", price: \"₹299\", time: \"30 Minutes\" },\n      ]\n    },\n    {\n      category: \"AC Installation Services\",\n      popular: false,\n      services: [\n        { name: \"Split AC Installation\", price: \"₹1,999\", time: \"3-4 Hours\" },\n        { name: \"Window AC Installation\", price: \"₹999\", time: \"2 Hours\" },\n        { name: \"AC Uninstallation\", price: \"₹699\", time: \"1-2 Hours\" },\n        { name: \"AC Shifting\", price: \"₹1,499\", time: \"4-5 Hours\" },\n        { name: \"Copper Piping (per foot)\", price: \"₹85\", time: \"As needed\" },\n      ]\n    },\n    {\n      category: \"Maintenance & AMC\",\n      popular: false,\n      services: [\n        { name: \"Basic AC Service\", price: \"₹599\", time: \"1 Hour\" },\n        { name: \"Deep AC Cleaning\", price: \"₹999\", time: \"2 Hours\" },\n        { name: \"Annual AMC (4 visits)\", price: \"₹2,499\", time: \"Year-round\" },\n        { name: \"Pre-Summer AC Checkup\", price: \"₹799\", time: \"1.5 Hours\" },\n        { name: \"Chemical Wash\", price: \"₹1,299\", time: \"2-3 Hours\" },\n      ]\n    }\n  ];\n\n  const handleBookService = (serviceName: string, category: string) => {\n    trackConversion(\"call\");\n    trackEvent(\"pricing_table_book\", \"/\");\n    const message = `Hi! I want to book ${serviceName} under ${category}. Please provide more details.`;\n    window.open(`https://wa.me/919876543210?text=${encodeURIComponent(message)}`);\n  };\n\n  return (\n    <section className=\"py-16 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n            Transparent AC Service Pricing in Mumbai\n          </h2>\n          <p className=\"text-lg text-gray-600\">\n            No hidden charges • Pay only after service completion • All prices include warranty\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {pricingData.map((category, categoryIndex) => (\n            <div \n              key={categoryIndex}\n              className={`relative bg-white rounded-2xl shadow-lg border-2 overflow-hidden ${\n                category.popular ? 'border-trust-blue' : 'border-gray-200'\n              }`}\n            >\n              {category.popular && (\n                <div className=\"absolute top-0 left-0 right-0 bg-trust-blue text-white text-center py-2 text-sm font-semibold\">\n                  🔥 Most Popular\n                </div>\n              )}\n              \n              <div className={`p-6 ${category.popular ? 'pt-12' : ''}`}>\n                <h3 className=\"text-xl font-bold text-gray-900 mb-6 text-center\">\n                  {category.category}\n                </h3>\n                \n                <div className=\"space-y-4\">\n                  {category.services.map((service, serviceIndex) => (\n                    <div \n                      key={serviceIndex}\n                      className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\"\n                      data-testid={`service-item-${categoryIndex}-${serviceIndex}`}\n                    >\n                      <div className=\"flex-1\">\n                        <div className=\"font-medium text-gray-900 text-sm\">\n                          {service.name}\n                        </div>\n                        <div className=\"text-xs text-gray-500\">\n                          ⏱️ {service.time}\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"font-bold text-trust-blue\">\n                          {service.price}\n                        </div>\n                        <button\n                          onClick={() => handleBookService(service.name, category.category)}\n                          className=\"text-xs text-trust-blue hover:underline\"\n                          data-testid={`book-btn-${categoryIndex}-${serviceIndex}`}\n                        >\n                          Book Now\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                  <Button\n                    onClick={() => trackEvent(\"pricing_call_category\", `/category-${categoryIndex}`)}\n                    className=\"w-full bg-trust-blue hover:bg-trust-blue-light text-white font-semibold py-3\"\n                    data-testid={`category-cta-${categoryIndex}`}\n                  >\n                    📞 Call for {category.category}\n                  </Button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-12 bg-gradient-to-r from-green-50 to-blue-50 rounded-2xl p-8 text-center\">\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">\n            Special Offers & Guarantees\n          </h3>\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n              <div className=\"text-green-600 text-2xl mb-2\">💰</div>\n              <h4 className=\"font-semibold mb-2\">Price Match Guarantee</h4>\n              <p className=\"text-sm text-gray-600\">Find a lower quote? We'll match it!</p>\n            </div>\n            <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n              <div className=\"text-blue-600 text-2xl mb-2\">🛡️</div>\n              <h4 className=\"font-semibold mb-2\">30-Day Warranty</h4>\n              <p className=\"text-sm text-gray-600\">All repairs covered for 30 days</p>\n            </div>\n            <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n              <div className=\"text-orange-600 text-2xl mb-2\">⚡</div>\n              <h4 className=\"font-semibold mb-2\">Same-Day Service</h4>\n              <p className=\"text-sm text-gray-600\">Emergency repairs within 4 hours</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":6667},"client/src/components/scroll-progress.tsx":{"content":"import { useState, useEffect } from \"react\";\n\nexport default function ScrollProgress() {\n  const [scrollProgress, setScrollProgress] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const totalHeight = document.documentElement.scrollHeight - window.innerHeight;\n      const progress = (window.scrollY / totalHeight) * 100;\n      setScrollProgress(Math.min(progress, 100));\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return (\n    <div className=\"fixed top-0 left-0 right-0 z-50\">\n      <div\n        className=\"h-1 bg-gradient-to-r from-accent-orange to-red-500 transition-all duration-150 ease-out\"\n        style={{ width: `${scrollProgress}%` }}\n      />\n    </div>\n  );\n}","size_bytes":798},"client/src/components/seo-content-section.tsx":{"content":"export default function SEOContentSection() {\n  return (\n    <section className=\"py-16 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid lg:grid-cols-2 gap-12\">\n          {/* Local SEO Content */}\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">\n              Professional AC Repair Services in Dahisar, Mumbai\n            </h2>\n            <div className=\"prose prose-gray max-w-none\">\n              <p className=\"text-gray-700 mb-4\">\n                Tara Air Conditioning Sales & Service is Mumbai's leading AC repair and installation company, \n                serving Dahisar, Borivali, Mira Road, Kandivali, and Malad for over 10 years. Our certified \n                technicians provide same-day emergency AC repair services with transparent pricing and warranty.\n              </p>\n              \n              <h3 className=\"text-lg font-semibold text-gray-900 mt-6 mb-3\">\n                AC Repair Services We Provide:\n              </h3>\n              <ul className=\"space-y-2 text-gray-700\">\n                <li>• <strong>Split AC Repair:</strong> All brands including LG, Samsung, Voltas, Godrej, Hitachi</li>\n                <li>• <strong>Window AC Service:</strong> Cooling issues, noise problems, electrical faults</li>\n                <li>• <strong>AC Gas Filling:</strong> R22, R32, R410A refrigerant refilling with leak detection</li>\n                <li>• <strong>Compressor Repair:</strong> Single phase and inverter compressor replacement</li>\n                <li>• <strong>PCB Repair:</strong> Control board and display panel repair for all AC models</li>\n                <li>• <strong>Emergency Repair:</strong> 24x7 emergency AC repair in Mumbai Western Suburbs</li>\n              </ul>\n\n              <h3 className=\"text-lg font-semibold text-gray-900 mt-6 mb-3\">\n                Why Choose Tara AC Service in Dahisar?\n              </h3>\n              <ul className=\"space-y-2 text-gray-700\">\n                <li>• Licensed and insured AC technicians with 10+ years experience</li>\n                <li>• Same-day service guarantee for emergency AC repairs</li>\n                <li>• Transparent pricing with no hidden charges or inspection fees</li>\n                <li>• 30-day warranty on all AC repair work and parts</li>\n                <li>• Serving 500+ satisfied customers in Mumbai Western Suburbs</li>\n                <li>• All major AC brands supported: LG, Samsung, Voltas, Godrej, Hitachi, Daikin, Blue Star</li>\n              </ul>\n            </div>\n          </div>\n\n          {/* Service Areas & Keywords */}\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">\n              AC Service Areas in Mumbai\n            </h2>\n            \n            <div className=\"bg-white rounded-xl shadow-md p-6 mb-8\">\n              <h3 className=\"font-semibold text-gray-900 mb-4\">Primary Service Locations:</h3>\n              <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                <div className=\"space-y-2\">\n                  <div className=\"font-medium text-trust-blue\">Dahisar</div>\n                  <ul className=\"text-gray-600 space-y-1\">\n                    <li>• Dahisar West</li>\n                    <li>• Dahisar East</li>\n                    <li>• Dahisar Check Naka</li>\n                    <li>• Rohit Nagar</li>\n                  </ul>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"font-medium text-trust-blue\">Borivali</div>\n                  <ul className=\"text-gray-600 space-y-1\">\n                    <li>• Borivali West</li>\n                    <li>• Borivali East</li>\n                    <li>• Borivali Station</li>\n                    <li>• Eksar</li>\n                  </ul>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"font-medium text-trust-blue\">Mira Road</div>\n                  <ul className=\"text-gray-600 space-y-1\">\n                    <li>• Mira Road East</li>\n                    <li>• Mira Road West</li>\n                    <li>• Bhayander</li>\n                    <li>• Uttan</li>\n                  </ul>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"font-medium text-trust-blue\">Kandivali & Malad</div>\n                  <ul className=\"text-gray-600 space-y-1\">\n                    <li>• Kandivali West</li>\n                    <li>• Kandivali East</li>\n                    <li>• Malad West</li>\n                    <li>• Malad East</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-trust-blue text-white rounded-xl p-6\">\n              <h3 className=\"font-semibold mb-4\">Emergency AC Repair Hotline</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center\">\n                  <span className=\"text-2xl mr-3\">📞</span>\n                  <div>\n                    <div className=\"font-bold text-lg\">+91 98765-43210</div>\n                    <div className=\"text-blue-100 text-sm\">Available 9 AM - 9 PM, 7 days a week</div>\n                  </div>\n                </div>\n                <div className=\"flex items-center\">\n                  <span className=\"text-2xl mr-3\">💬</span>\n                  <div>\n                    <div className=\"font-medium\">WhatsApp Support</div>\n                    <div className=\"text-blue-100 text-sm\">Quick response for quotes and booking</div>\n                  </div>\n                </div>\n                <div className=\"flex items-center\">\n                  <span className=\"text-2xl mr-3\">⚡</span>\n                  <div>\n                    <div className=\"font-medium\">Same Day Service</div>\n                    <div className=\"text-blue-100 text-sm\">Emergency repairs within 2-4 hours</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Common AC Problems Section */}\n        <div className=\"mt-12\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-8 text-center\">\n            Common AC Problems We Fix in Mumbai\n          </h2>\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <div className=\"bg-white rounded-lg p-6 shadow-md\">\n              <div className=\"text-red-500 text-3xl mb-3\">🔥</div>\n              <h3 className=\"font-semibold text-gray-900 mb-2\">AC Not Cooling</h3>\n              <p className=\"text-gray-600 text-sm\">\n                Gas leakage, dirty filters, compressor issues, or thermostat problems. \n                Our technicians diagnose and fix cooling issues quickly.\n              </p>\n            </div>\n            <div className=\"bg-white rounded-lg p-6 shadow-md\">\n              <div className=\"text-blue-500 text-3xl mb-3\">💧</div>\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Water Leakage</h3>\n              <p className=\"text-gray-600 text-sm\">\n                Blocked drainage, improper installation, or condensate pump failure. \n                We fix water leakage issues permanently.\n              </p>\n            </div>\n            <div className=\"bg-white rounded-lg p-6 shadow-md\">\n              <div className=\"text-yellow-500 text-3xl mb-3\">🔊</div>\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Strange Noises</h3>\n              <p className=\"text-gray-600 text-sm\">\n                Grinding, squealing, or clicking sounds from indoor or outdoor units. \n                We identify and resolve noise issues quickly.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":7801},"client/src/components/service-showcase.tsx":{"content":"import { useAnalytics } from \"@/hooks/use-analytics\";\n\nconst services = [\n  {\n    id: \"repair\",\n    title: \"AC Repair\",\n    description: \"Any Brand, Any Model, Fast Fix. Cooling issues, gas leaks, compressor problems.\",\n    price: \"Starting from ₹499\",\n    icon: (\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"></path>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n      </svg>\n    ),\n    bgColor: \"bg-trust-blue\",\n  },\n  {\n    id: \"installation\",\n    title: \"AC Installation\",\n    description: \"Professional installation with proper mounting, piping & electrical connections.\",\n    price: \"Starting from ₹1,999\",\n    icon: (\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 14l-7 7m0 0l-7-7m7 7V3\"></path>\n      </svg>\n    ),\n    bgColor: \"bg-green-600\",\n  },\n  {\n    id: \"amc\",\n    title: \"Annual AMC\",\n    description: \"Regular maintenance to keep your AC running efficiently all year round.\",\n    price: \"Starting from ₹2,499/year\",\n    icon: (\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\"></path>\n      </svg>\n    ),\n    bgColor: \"bg-purple-600\",\n  },\n  {\n    id: \"sales\",\n    title: \"AC Sales\",\n    description: \"Brand new ACs from top manufacturers with installation & warranty included.\",\n    price: \"Best Prices Guaranteed\",\n    icon: (\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"></path>\n      </svg>\n    ),\n    bgColor: \"bg-accent-orange\",\n  },\n];\n\nexport default function ServiceShowcase() {\n  const { trackEvent } = useAnalytics();\n\n  const handleServiceClick = (serviceId: string) => {\n    trackEvent(`service_click_${serviceId}`, \"/\");\n    // Scroll to contact form\n    const contactForm = document.getElementById(\"contact-form\");\n    if (contactForm) {\n      contactForm.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <section className=\"py-16 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Our AC Services in Dahisar & Nearby Areas</h2>\n          <p className=\"text-lg text-gray-600\">Professional AC solutions for homes and businesses across Mumbai's Western Suburbs</p>\n        </div>\n        \n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {services.map((service) => (\n            <div \n              key={service.id}\n              className=\"bg-white rounded-xl shadow-md hover:shadow-lg transition-shadow p-6 border border-gray-100 hover:border-trust-blue cursor-pointer\"\n              onClick={() => handleServiceClick(service.id)}\n              data-testid={`service-card-${service.id}`}\n            >\n              <div className={`${service.bgColor} text-white p-3 rounded-lg w-fit mb-4`}>\n                {service.icon}\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{service.title}</h3>\n              <p className=\"text-gray-600 mb-4\">{service.description}</p>\n              <div className=\"text-trust-blue font-semibold\" data-testid={`service-price-${service.id}`}>\n                {service.price}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4388},"client/src/components/social-proof.tsx":{"content":"const reviews = [\n  {\n    rating: 5,\n    text: \"Excellent service! AC was not cooling properly. Tara AC team came the same day and fixed it in 30 minutes. Very reasonable pricing and professional work.\",\n    name: \"Rajesh Sharma\",\n    location: \"Dahisar West\",\n    image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=100&h=100\",\n  },\n  {\n    rating: 5,\n    text: \"Got my new AC installed by Tara team. Clean installation, proper pipe work. They also explained how to use it properly. Highly recommended!\",\n    name: \"Priya Patel\",\n    location: \"Borivali East\",\n    image: \"https://images.unsplash.com/photo-1494790108755-2616b612b786?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=100&h=100\",\n  },\n  {\n    rating: 5,\n    text: \"Amazing service during monsoon season. AC was making noise and not cooling. Fixed within 2 hours of calling. Fair pricing and quality work.\",\n    name: \"Amit Kumar\",\n    location: \"Mira Road\",\n    image: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=100&h=100\",\n  },\n];\n\nexport default function SocialProof() {\n  return (\n    <section className=\"py-16 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">What Our Customers Say</h2>\n          <p className=\"text-lg text-gray-600\">Real reviews from real customers in Mumbai</p>\n        </div>\n        \n        <div className=\"grid md:grid-cols-3 gap-8\">\n          {reviews.map((review, index) => (\n            <div key={index} className=\"bg-white rounded-xl shadow-md p-6\" data-testid={`review-${index}`}>\n              <div className=\"flex items-center mb-4\">\n                <div className=\"flex text-yellow-400 mr-2\">\n                  {[...Array(review.rating)].map((_, i) => (\n                    <span key={i}>⭐</span>\n                  ))}\n                </div>\n                <span className=\"text-sm text-gray-600\">Google Review</span>\n              </div>\n              <p className=\"text-gray-700 mb-4\">\"{review.text}\"</p>\n              <div className=\"flex items-center\">\n                <img \n                  src={review.image} \n                  alt={`Satisfied customer from ${review.location}`}\n                  className=\"w-10 h-10 rounded-full mr-3\"\n                  loading=\"lazy\"\n                />\n                <div>\n                  <div className=\"font-semibold text-sm\" data-testid={`reviewer-name-${index}`}>\n                    {review.name}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">{review.location}</div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2972},"client/src/components/special-offer.tsx":{"content":"import { useAnalytics } from \"@/hooks/use-analytics\";\n\nexport default function SpecialOffer() {\n  const { trackEvent, trackConversion } = useAnalytics();\n\n  const handleOfferCallClick = () => {\n    trackConversion(\"call\");\n    trackEvent(\"offer_call_click\", \"/\");\n  };\n\n  const handleOfferWhatsAppClick = () => {\n    trackConversion(\"whatsapp\");\n    trackEvent(\"offer_whatsapp_click\", \"/\");\n  };\n\n  return (\n    <section className=\"py-8 bg-gradient-to-r from-accent-orange to-accent-orange-light\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center text-white\">\n          <h2 className=\"text-2xl sm:text-3xl font-bold mb-4\">Summer Special Offer!</h2>\n          <p className=\"text-lg sm:text-xl mb-6\">Book Before Summer and Get FREE Filter Cleaning + 10% OFF on AMC</p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n            <a \n              href=\"tel:+919876543210\" \n              onClick={handleOfferCallClick}\n              data-testid=\"offer-call\"\n              className=\"bg-white text-accent-orange font-bold py-3 px-8 rounded-lg hover:bg-gray-100 transition-colors\"\n            >\n              📞 Call Now - Limited Time\n            </a>\n            <a \n              href=\"https://wa.me/919876543210?text=Hi%20I%20want%20to%20book%20Summer%20Special%20AC%20service%20offer\" \n              onClick={handleOfferWhatsAppClick}\n              data-testid=\"offer-whatsapp\"\n              className=\"bg-green-500 text-white font-bold py-3 px-8 rounded-lg hover:bg-green-600 transition-colors\"\n            >\n              💬 WhatsApp for Summer Offer\n            </a>\n          </div>\n          <div className=\"mt-4 text-sm\">\n            <span className=\"bg-red-500 text-white px-3 py-1 rounded-full animate-pulse\" data-testid=\"offer-expiry\">\n              Offer Valid Till: March 31st\n            </span>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1969},"client/src/components/sticky-mobile-footer.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\n\nexport default function StickyMobileFooter() {\n  const { trackEvent, trackConversion } = useAnalytics();\n  const [showPulse, setShowPulse] = useState(false);\n  const [currentOffer, setCurrentOffer] = useState(0);\n\n  const offers = [\n    \"🔥 AC Service ₹499 Only!\",\n    \"⚡ Same Day Service Available\",\n    \"💯 500+ Happy Customers\",\n    \"🛡️ 30-Day Warranty Included\"\n  ];\n\n  useEffect(() => {\n    // Show pulse animation every 15 seconds\n    const pulseInterval = setInterval(() => {\n      setShowPulse(true);\n      setTimeout(() => setShowPulse(false), 2000);\n    }, 15000);\n\n    // Rotate offers every 4 seconds\n    const offerInterval = setInterval(() => {\n      setCurrentOffer((prev) => (prev + 1) % offers.length);\n    }, 4000);\n\n    return () => {\n      clearInterval(pulseInterval);\n      clearInterval(offerInterval);\n    };\n  }, []);\n\n  const handleStickyCallClick = () => {\n    trackConversion(\"call\");\n    trackEvent(\"sticky_call_click\", \"/\");\n  };\n\n  const handleStickyWhatsAppClick = () => {\n    trackConversion(\"whatsapp\");\n    trackEvent(\"sticky_whatsapp_click\", \"/\");\n  };\n\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 shadow-lg z-50 lg:hidden\">\n      {/* Rotating Offer Banner */}\n      <div className=\"bg-gradient-to-r from-accent-orange to-red-500 text-white py-2 px-4 text-center text-sm font-medium animate-slide-in\">\n        {offers[currentOffer]}\n      </div>\n      \n      {/* Action Buttons */}\n      <div className=\"flex\">\n        <a\n          href=\"tel:+919876543210\"\n          onClick={handleStickyCallClick}\n          data-testid=\"sticky-call\"\n          className={`flex-1 bg-accent-orange hover:bg-accent-orange-light text-white py-4 px-6 text-center font-bold text-lg flex items-center justify-center transition-all ${\n            showPulse ? 'animate-pulse bg-red-500' : ''\n          }`}\n        >\n          <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path>\n          </svg>\n          Call Now\n          <span className=\"ml-1 text-xs\">₹499</span>\n        </a>\n        \n        <a\n          href=\"https://wa.me/919876543210?text=Hi%20I%20need%20AC%20service%20in%20Mumbai.%20I%20saw%20your%20website.%20Please%20provide%20quote%20for%20my%20area.\"\n          onClick={handleStickyWhatsAppClick}\n          data-testid=\"sticky-whatsapp\"\n          className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-4 px-6 text-center font-bold text-lg flex items-center justify-center transition-all relative\"\n        >\n          <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.890-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488\"/>\n          </svg>\n          WhatsApp\n          <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center animate-bounce\">\n            !\n          </span>\n        </a>\n      </div>\n      \n      {/* Trust Indicators */}\n      <div className=\"bg-gray-50 py-2 px-4 flex justify-center items-center text-xs text-gray-600\">\n        <span className=\"flex items-center mr-4\">\n          ⭐ 4.8/5 Rating\n        </span>\n        <span className=\"flex items-center mr-4\">\n          ✅ Licensed & Insured\n        </span>\n        <span className=\"flex items-center\">\n          🔒 Pay After Service\n        </span>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4861},"client/src/components/trust-accelerator.tsx":{"content":"export default function TrustAccelerator() {\n  return (\n    <section className=\"bg-white py-6 border-b\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-6 text-center\">\n          <div className=\"flex items-center justify-center space-x-2\">\n            <div className=\"flex text-yellow-400\">\n              <span>⭐⭐⭐⭐⭐</span>\n            </div>\n            <div className=\"text-sm\">\n              <div className=\"font-semibold\" data-testid=\"google-rating\">4.8 Google Rating</div>\n              <div className=\"text-gray-600\">200+ Reviews</div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center justify-center space-x-2\">\n            <div className=\"bg-green-100 p-2 rounded-full\">\n              <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n              </svg>\n            </div>\n            <div className=\"text-sm\">\n              <div className=\"font-semibold\">Licensed Technicians</div>\n              <div className=\"text-gray-600\">Trained Professionals</div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center justify-center space-x-2\">\n            <div className=\"bg-blue-100 p-2 rounded-full\">\n              <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n              </svg>\n            </div>\n            <div className=\"text-sm\">\n              <div className=\"font-semibold\">Warranty Included</div>\n              <div className=\"text-gray-600\">On All Repairs</div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center justify-center space-x-2\">\n            <div className=\"bg-orange-100 p-2 rounded-full\">\n              <svg className=\"w-6 h-6 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n              </svg>\n            </div>\n            <div className=\"text-sm\">\n              <div className=\"font-semibold\">Same-Day Service</div>\n              <div className=\"text-gray-600\">Emergency Support</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2701},"client/src/components/urgency-banner.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\n\nexport default function UrgencyBanner() {\n  const { trackEvent } = useAnalytics();\n  const [timeLeft, setTimeLeft] = useState({ hours: 4, minutes: 32, seconds: 45 });\n  const [isVisible, setIsVisible] = useState(true);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev.seconds > 0) {\n          return { ...prev, seconds: prev.seconds - 1 };\n        } else if (prev.minutes > 0) {\n          return { ...prev, minutes: prev.minutes - 1, seconds: 59 };\n        } else if (prev.hours > 0) {\n          return { hours: prev.hours - 1, minutes: 59, seconds: 59 };\n        }\n        return prev;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const handleCallClick = () => {\n    trackEvent(\"urgency_banner_call\", \"urgency\");\n    window.open(\"tel:+919876543210\");\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"bg-gradient-to-r from-red-600 to-red-500 text-white py-3 px-4 relative overflow-hidden\">\n      <div className=\"absolute inset-0 bg-black opacity-10 animate-pulse\"></div>\n      <div className=\"container mx-auto flex flex-col md:flex-row items-center justify-between relative z-10\">\n        <div className=\"flex items-center text-center md:text-left mb-2 md:mb-0\">\n          <span className=\"text-yellow-300 mr-2 text-lg\">🔥</span>\n          <div>\n            <div className=\"font-bold text-lg\">Limited Time: Same-Day AC Service ₹499</div>\n            <div className=\"text-sm opacity-90\">Only 3 slots left for today in Dahisar area</div>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          <div className=\"text-center\">\n            <div className=\"text-xs opacity-80\">Offer expires in:</div>\n            <div className=\"font-mono text-xl font-bold\">\n              {String(timeLeft.hours).padStart(2, '0')}:\n              {String(timeLeft.minutes).padStart(2, '0')}:\n              {String(timeLeft.seconds).padStart(2, '0')}\n            </div>\n          </div>\n          \n          <button\n            onClick={handleCallClick}\n            data-testid=\"urgency-banner-call\"\n            className=\"bg-yellow-400 text-red-600 font-bold py-2 px-6 rounded-lg hover:bg-yellow-300 transition-colors animate-bounce\"\n          >\n            Book Now!\n          </button>\n        </div>\n        \n        <button\n          onClick={() => setIsVisible(false)}\n          className=\"absolute top-1 right-2 text-white hover:text-gray-300 text-lg\"\n          data-testid=\"urgency-banner-close\"\n        >\n          ×\n        </button>\n      </div>\n    </div>\n  );\n}","size_bytes":2711},"client/src/components/video-gallery.tsx":{"content":"import { useState } from \"react\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\n\nexport default function VideoGallery() {\n  const { trackEvent } = useAnalytics();\n  const [activeVideo, setActiveVideo] = useState(0);\n\n  const videos = [\n    {\n      id: \"ac-repair-demo\",\n      title: \"AC Repair Process - Split AC Gas Filling\",\n      thumbnail: \"https://images.unsplash.com/photo-1581094794329-c8112a89af12?ixlib=rb-4.0.3&w=600&h=400\",\n      videoUrl: \"https://www.youtube.com/embed/dQw4w9WgXcQ\", // Placeholder - replace with actual AC repair video\n      description: \"Watch our certified technician demonstrate AC gas filling and leak detection process\",\n      duration: \"3:45\"\n    },\n    {\n      id: \"ac-installation-timelapse\",\n      title: \"Split AC Installation - Complete Process\",\n      thumbnail: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?ixlib=rb-4.0.3&w=600&h=400\",\n      videoUrl: \"https://www.youtube.com/embed/dQw4w9WgXcQ\", // Placeholder - replace with actual installation video\n      description: \"Complete AC installation from wall mounting to final testing in Dahisar home\",\n      duration: \"8:20\"\n    },\n    {\n      id: \"customer-testimonial\",\n      title: \"Happy Customer Review - Borivali\",\n      thumbnail: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&w=600&h=400\",\n      videoUrl: \"https://www.youtube.com/embed/dQw4w9WgXcQ\", // Placeholder - replace with customer testimonial\n      description: \"Real customer from Borivali shares experience with our AC repair service\",\n      duration: \"2:15\"\n    }\n  ];\n\n  const handleVideoClick = (index: number) => {\n    setActiveVideo(index);\n    trackEvent(\"video_gallery_click\", `/video-${videos[index].id}`);\n  };\n\n  const handleVideoPlay = (videoId: string) => {\n    trackEvent(\"video_play\", `/video-${videoId}`);\n  };\n\n  return (\n    <section className=\"py-16 bg-gray-900 text-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold mb-4\">See Our AC Service Work in Action</h2>\n          <p className=\"text-gray-300 text-lg\">\n            Real videos from actual AC repair and installation jobs in Mumbai\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {/* Main Video Player */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"relative bg-black rounded-xl overflow-hidden\">\n              <div className=\"aspect-video\">\n                <iframe\n                  src={videos[activeVideo].videoUrl}\n                  title={videos[activeVideo].title}\n                  className=\"w-full h-full\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                  onLoad={() => handleVideoPlay(videos[activeVideo].id)}\n                ></iframe>\n              </div>\n              <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-6\">\n                <h3 className=\"text-xl font-bold mb-2\">{videos[activeVideo].title}</h3>\n                <p className=\"text-gray-300 text-sm\">{videos[activeVideo].description}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Video Thumbnails */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold mb-4\">More AC Service Videos</h3>\n            {videos.map((video, index) => (\n              <div\n                key={video.id}\n                onClick={() => handleVideoClick(index)}\n                className={`cursor-pointer rounded-lg overflow-hidden transition-all ${\n                  activeVideo === index ? 'ring-2 ring-accent-orange' : 'hover:scale-105'\n                }`}\n                data-testid={`video-thumbnail-${index}`}\n              >\n                <div className=\"relative\">\n                  <img\n                    src={video.thumbnail}\n                    alt={video.title}\n                    className=\"w-full h-24 object-cover\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/40 flex items-center justify-center\">\n                    <div className=\"bg-white/20 rounded-full p-2\">\n                      <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M8 5v14l11-7z\"/>\n                      </svg>\n                    </div>\n                  </div>\n                  <div className=\"absolute bottom-1 right-1 bg-black/70 text-xs px-2 py-1 rounded\">\n                    {video.duration}\n                  </div>\n                </div>\n                <div className=\"p-3 bg-gray-800\">\n                  <h4 className=\"font-medium text-sm line-clamp-2\">{video.title}</h4>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Call to Action */}\n        <div className=\"text-center mt-12\">\n          <div className=\"bg-accent-orange rounded-2xl p-8 inline-block\">\n            <h3 className=\"text-2xl font-bold mb-4\">Ready for Professional AC Service?</h3>\n            <p className=\"mb-6\">Get the same quality work shown in these videos for your home</p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <a\n                href=\"tel:+919876543210\"\n                className=\"bg-white text-accent-orange font-bold py-3 px-8 rounded-lg hover:bg-gray-100 transition-colors\"\n                data-testid=\"video-cta-call\"\n                onClick={() => trackEvent(\"video_section_call\", \"/\")}\n              >\n                📞 Call for Video Consultation\n              </a>\n              <a\n                href=\"https://wa.me/919876543210?text=Hi%20I%20saw%20your%20AC%20service%20videos.%20I%20need%20AC%20service%20in%20Mumbai\"\n                className=\"bg-green-500 text-white font-bold py-3 px-8 rounded-lg hover:bg-green-600 transition-colors\"\n                data-testid=\"video-cta-whatsapp\"\n                onClick={() => trackEvent(\"video_section_whatsapp\", \"/\")}\n              >\n                💬 WhatsApp for Quote\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":6296},"client/src/components/why-choose-us.tsx":{"content":"const features = [\n  {\n    title: \"Local Experts\",\n    description: \"Deep knowledge of Mumbai's climate and housing requirements\",\n    icon: (\n      <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n      </svg>\n    ),\n    bgColor: \"bg-trust-blue\",\n  },\n  {\n    title: \"Same-Day Service\",\n    description: \"Emergency repairs within 2-4 hours across Dahisar, Borivali, Mira Road\",\n    icon: (\n      <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n    ),\n    bgColor: \"bg-green-600\",\n  },\n  {\n    title: \"Transparent Rates\",\n    description: \"No hidden charges. You pay what we quote - upfront pricing\",\n    icon: (\n      <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"></path>\n      </svg>\n    ),\n    bgColor: \"bg-accent-orange\",\n  },\n  {\n    title: \"10+ Years Experience\",\n    description: \"Trusted by 500+ families across Mumbai's Western Suburbs\",\n    icon: (\n      <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\n      </svg>\n    ),\n    bgColor: \"bg-purple-600\",\n  },\n];\n\nexport default function WhyChooseUs() {\n  return (\n    <section className=\"py-16 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Why Choose Tara AC Service?</h2>\n          <p className=\"text-lg text-gray-600\">Serving Dahisar & Western Suburbs Since 2013</p>\n        </div>\n        \n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {features.map((feature, index) => (\n            <div key={index} className=\"text-center\">\n              <div className={`${feature.bgColor} text-white p-4 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4`}>\n                {feature.icon}\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\" data-testid={`feature-title-${index}`}>\n                {feature.title}\n              </h3>\n              <p className=\"text-gray-600\">{feature.description}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3117},"client/src/hooks/use-analytics.ts":{"content":"import { useCallback } from \"react\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\ndeclare global {\n  interface Window {\n    gtag?: (...args: any[]) => void;\n    fbq?: (...args: any[]) => void;\n    dataLayer?: any[];\n  }\n}\n\nexport function useAnalytics() {\n  const trackEvent = useCallback(async (event: string, page?: string) => {\n    try {\n      // Track in our backend\n      await apiRequest(\"POST\", \"/api/analytics\", {\n        event,\n        page: page || window.location.pathname,\n      });\n\n      // Track in Google Analytics 4\n      if (window.gtag) {\n        window.gtag('event', event, {\n          page_location: window.location.href,\n          page_title: document.title,\n        });\n      }\n\n      // Track in Meta Pixel\n      if (window.fbq) {\n        window.fbq('track', 'CustomEvent', { event_name: event });\n      }\n\n      // Track in Google Tag Manager\n      if (window.dataLayer) {\n        window.dataLayer.push({\n          event: 'custom_event',\n          event_category: 'engagement',\n          event_label: event,\n        });\n      }\n    } catch (error) {\n      console.error(\"Analytics tracking failed:\", error);\n    }\n  }, []);\n\n  const trackConversion = useCallback(async (conversionType: 'call' | 'whatsapp' | 'form') => {\n    try {\n      await trackEvent(`conversion_${conversionType}`);\n      \n      // Track conversion in Google Ads\n      if (window.gtag) {\n        window.gtag('event', 'conversion', {\n          send_to: 'AW-CONVERSION_ID/CONVERSION_LABEL', // TODO: Replace with actual conversion tracking\n          value: 1.0,\n          currency: 'INR',\n        });\n      }\n\n      // Track conversion in Meta Pixel\n      if (window.fbq) {\n        window.fbq('track', 'Lead', { \n          content_category: 'AC Service',\n          content_name: conversionType \n        });\n      }\n    } catch (error) {\n      console.error(\"Conversion tracking failed:\", error);\n    }\n  }, [trackEvent]);\n\n  return {\n    trackEvent,\n    trackConversion,\n  };\n}\n","size_bytes":1976},"client/src/hooks/use-exit-intent.ts":{"content":"import { useState, useEffect } from \"react\";\n\nexport function useExitIntent() {\n  const [showExitIntent, setShowExitIntent] = useState(false);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    \n    const handleMouseLeave = (e: MouseEvent) => {\n      if (e.clientY <= 0 && !showExitIntent) {\n        setShowExitIntent(true);\n      }\n    };\n\n    const handleBeforeUnload = () => {\n      if (!showExitIntent) {\n        setShowExitIntent(true);\n      }\n    };\n\n    // Show after 30 seconds of inactivity\n    const resetTimer = () => {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        if (!showExitIntent) {\n          setShowExitIntent(true);\n        }\n      }, 30000);\n    };\n\n    document.addEventListener('mouseleave', handleMouseLeave);\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    document.addEventListener('mousemove', resetTimer);\n    document.addEventListener('keypress', resetTimer);\n\n    resetTimer();\n\n    return () => {\n      document.removeEventListener('mouseleave', handleMouseLeave);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      document.removeEventListener('mousemove', resetTimer);\n      document.removeEventListener('keypress', resetTimer);\n      clearTimeout(timer);\n    };\n  }, [showExitIntent]);\n\n  const closeExitIntent = () => setShowExitIntent(false);\n\n  return { showExitIntent, closeExitIntent };\n}","size_bytes":1400},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/home.tsx":{"content":"import { useEffect } from \"react\";\nimport { useAnalytics } from \"@/hooks/use-analytics\";\nimport UrgencyBanner from \"@/components/urgency-banner\";\nimport HeroSection from \"@/components/hero-section\";\nimport TrustAccelerator from \"@/components/trust-accelerator\";\nimport AdvancedLeadMagnet from \"@/components/advanced-lead-magnet\";\nimport ServiceShowcase from \"@/components/service-showcase\";\nimport VideoGallery from \"@/components/video-gallery\";\nimport ACServiceGallery from \"@/components/ac-service-gallery\";\nimport PricingTable from \"@/components/pricing-table\";\nimport WhyChooseUs from \"@/components/why-choose-us\";\nimport SocialProof from \"@/components/social-proof\";\nimport SpecialOffer from \"@/components/special-offer\";\nimport SEOContentSection from \"@/components/seo-content-section\";\nimport FAQSection from \"@/components/faq-section\";\nimport ContactForm from \"@/components/contact-form\";\nimport Footer from \"@/components/footer\";\nimport StickyMobileFooter from \"@/components/sticky-mobile-footer\";\nimport FloatingWidgets from \"@/components/floating-widgets\";\nimport ExitIntentModal from \"@/components/exit-intent-modal\";\nimport LiveChatWidget from \"@/components/live-chat-widget\";\nimport ScrollProgress from \"@/components/scroll-progress\";\nimport { useExitIntent } from \"@/hooks/use-exit-intent\";\n\nexport default function Home() {\n  const { trackEvent } = useAnalytics();\n  const { showExitIntent, closeExitIntent } = useExitIntent();\n\n  useEffect(() => {\n    trackEvent(\"page_view\", \"/\");\n  }, [trackEvent]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <ScrollProgress />\n      <UrgencyBanner />\n      {/* Header with sticky navigation */}\n      <header className=\"bg-white shadow-sm sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-3\">\n            <div className=\"flex items-center\">\n              <h1 className=\"text-xl font-bold text-trust-blue\">Tara AC Service</h1>\n              <span className=\"ml-3 text-sm text-gray-600 hidden sm:block\">Dahisar, Mumbai</span>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <a \n                href=\"tel:+919876543210\" \n                className=\"flex items-center text-sm text-trust-blue font-medium hover:text-trust-blue-light\"\n                data-testid=\"header-call\"\n                onClick={() => trackEvent(\"header_call_click\", \"/\")}\n              >\n                <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path>\n                </svg>\n                <span className=\"hidden sm:block\">Call Now</span>\n              </a>\n              <a \n                href=\"https://wa.me/919876543210?text=Hi%20I%20need%20AC%20service%20in%20Dahisar\" \n                className=\"bg-green-500 text-white px-3 py-1 rounded-lg text-sm font-medium hover:bg-green-600 transition-colors\"\n                data-testid=\"header-whatsapp\"\n                onClick={() => trackEvent(\"header_whatsapp_click\", \"/\")}\n              >\n                WhatsApp\n              </a>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <UrgencyBanner />\n      \n      <main>\n        <HeroSection />\n        <TrustAccelerator />\n        <AdvancedLeadMagnet />\n        <ServiceShowcase />\n        <VideoGallery />\n        <ACServiceGallery />\n        <PricingTable />\n        <WhyChooseUs />\n        <SocialProof />\n        <SpecialOffer />\n        <SEOContentSection />\n        <FAQSection />\n        <ContactForm />\n      </main>\n\n      <Footer />\n      <StickyMobileFooter />\n      <FloatingWidgets />\n      <LiveChatWidget />\n      <ExitIntentModal \n        isOpen={showExitIntent} \n        onClose={closeExitIntent} \n      />\n    </div>\n  );\n}\n","size_bytes":4102},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}